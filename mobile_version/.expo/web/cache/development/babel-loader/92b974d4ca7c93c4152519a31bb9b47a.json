{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\develop\\\\pypr\\\\HypeFans\\\\mobile_version\\\\screens\\\\main\\\\blog\\\\Index.js\";\nimport React, { useState, useEffect } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\n\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nimport s from \"../../../styles/style\";\nimport text from \"../../../assets/text/text\";\nimport Blog from \"./Blog\";\nimport UserPage from \"../profile/UserPage\";\nimport Story from \"../create/Story\";\nimport Editor from \"../create/Editor\";\nimport StoryViewer from \"./StoryViewer\";\nimport Create from \"../create/Create\";\nimport ChatModule from \"../chat/ChatModule\";\nvar platform = Platform.OS === 'ios' ? true : false;\nimport SvgUri from \"expo-svg-uri\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer } from '@react-navigation/native';\nvar Stack = createStackNavigator();\nexport default function Screen(props) {\n  var _this = this;\n\n  var lang = props.lang;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      search = _React$useState2[0],\n      setSearch = _React$useState2[1];\n\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Blog\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, function (nprops) {\n    return React.createElement(Blog, _extends({}, nprops, {\n      lang: lang,\n      onExit: function onExit() {\n        return props.onExit();\n      },\n      users: props.users,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 24\n      }\n    }));\n  }), React.createElement(Stack.Screen, {\n    name: \"UserPage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, function (nprops) {\n    return React.createElement(UserPage, _extends({}, nprops, {\n      lang: lang,\n      users: props.users,\n      setTab: function setTab(stat) {\n        return props.setTab(stat);\n      },\n      onPage: function onPage(data) {\n        return props.onPage(data);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 24\n      }\n    }));\n  }), React.createElement(Stack.Screen, {\n    name: \"Story\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, function (nprops) {\n    return React.createElement(Story, _extends({}, nprops, {\n      lang: lang,\n      setTab: function setTab(stat) {\n        return props.setTab(stat);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 24\n      }\n    }));\n  }), React.createElement(Stack.Screen, {\n    name: \"Editor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, function (nprops) {\n    return React.createElement(Editor, _extends({}, nprops, {\n      lang: lang,\n      setTab: function setTab(stat) {\n        return props.setTab(stat);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 24\n      }\n    }));\n  }), React.createElement(Stack.Screen, {\n    name: \"Create\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, function (nprops) {\n    return React.createElement(Create, _extends({}, nprops, {\n      lang: lang,\n      onBack: function onBack() {\n        return props.onBack();\n      },\n      setTab: function setTab(stat) {\n        return props.setTab(stat);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 24\n      }\n    }));\n  }), React.createElement(Stack.Screen, {\n    name: \"ChatModule\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, function (nprops) {\n    return React.createElement(ChatModule, _extends({}, nprops, {\n      lang: lang,\n      setTab: function setTab(stat) {\n        return props.setTab(stat);\n      },\n      data: props.data,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 24\n      }\n    }));\n  }), React.createElement(Stack.Screen, {\n    name: \"StoryViewer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, function (nprops) {\n    return React.createElement(StoryViewer, _extends({}, nprops, {\n      lang: lang,\n      setTab: function setTab(stat) {\n        return props.setTab(stat);\n      },\n      data: props.data,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 24\n      }\n    }));\n  })));\n}","map":{"version":3,"sources":["D:/develop/pypr/HypeFans/mobile_version/screens/main/blog/Index.js"],"names":["React","useState","useEffect","Dimensions","get","width","height","s","text","Blog","UserPage","Story","Editor","StoryViewer","Create","ChatModule","platform","Platform","OS","SvgUri","createStackNavigator","NavigationContainer","Stack","Screen","props","lang","search","setSearch","headerShown","nprops","onExit","users","stat","setTab","data","onPage","onBack"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Image,\r\n  ImageBackground,\r\n  Platform,\r\n  ScrollView,\r\n  StyleSheet,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  TouchableWithoutFeedback,\r\n  KeyboardAvoidingView,\r\n  View,\r\n  Dimensions,\r\n} from 'react-native';\r\n\r\nconst { width, height } = Dimensions.get(\"screen\")\r\n\r\nimport s from '../../../styles/style'\r\nimport text from '../../../assets/text/text'\r\n\r\nimport Blog from './Blog'\r\nimport UserPage from '../profile/UserPage'\r\nimport Story from '../create/Story'\r\nimport Editor from '../create/Editor'\r\nimport StoryViewer from './StoryViewer'\r\nimport Create from '../create/Create'\r\nimport ChatModule from '../chat/ChatModule'\r\n\r\n\r\nlet platform = Platform.OS === 'ios' ? true : false\r\n\r\nimport SvgUri from \"expo-svg-uri\"\r\n\r\n//import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\n\r\n//const Drawer = createDrawerNavigator();\r\nconst Stack = createStackNavigator();\r\n\r\n\r\nexport default function Screen(props) {\r\n\r\n  let lang = props.lang\r\n\r\n  let [search, setSearch] = React.useState(false)\r\n\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator\r\n        screenOptions={{\r\n          headerShown: false\r\n        }}\r\n      >\r\n\r\n        <Stack.Screen name=\"Blog\">\r\n          {(nprops) => <Blog  {...nprops}\r\n            lang={lang}\r\n            onExit={() => props.onExit()}\r\n            users={props.users}\r\n          />}\r\n        </Stack.Screen>\r\n\r\n        <Stack.Screen name=\"UserPage\">\r\n          {(nprops) => <UserPage  {...nprops}\r\n            lang={lang}\r\n            users={props.users}\r\n            setTab={(stat) => props.setTab(stat)}\r\n            onPage = {(data) => props.onPage(data)}\r\n          />}\r\n        </Stack.Screen>\r\n        <Stack.Screen name=\"Story\">\r\n          {(nprops) => <Story  {...nprops}\r\n            lang={lang}\r\n            setTab={(stat) => props.setTab(stat)}\r\n          />}\r\n        </Stack.Screen>\r\n        <Stack.Screen name=\"Editor\">\r\n          {(nprops) => <Editor  {...nprops}\r\n            lang={lang}\r\n            setTab={(stat) => props.setTab(stat)}\r\n          />}\r\n        </Stack.Screen>\r\n        <Stack.Screen name=\"Create\">\r\n          {(nprops) => <Create  {...nprops}\r\n            lang={lang}\r\n            onBack={() => props.onBack()}\r\n            setTab={(stat) => props.setTab(stat)}\r\n          //onStory={()=>props.onStory()} nested\r\n          />}\r\n        </Stack.Screen>\r\n        <Stack.Screen name=\"ChatModule\">\r\n          {(nprops) => <ChatModule  {...nprops}\r\n            lang={lang}\r\n            setTab={(stat) => props.setTab(stat)}\r\n            data={props.data}\r\n          />}\r\n        </Stack.Screen>\r\n        <Stack.Screen name=\"StoryViewer\">\r\n          {(nprops) => <StoryViewer  {...nprops}\r\n            lang={lang}\r\n            setTab={(stat) => props.setTab(stat)}\r\n            data={props.data}\r\n          />}\r\n        </Stack.Screen>\r\n\r\n\r\n\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}