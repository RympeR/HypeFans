{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\develop\\\\pypr\\\\HypeFans\\\\mobile_version\\\\screens\\\\main\\\\chat\\\\Chat.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState, useEffect } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\n\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nimport s from \"../../../styles/style\";\nimport text from \"../../../assets/text/text\";\nimport TopGradient from \"../../../components/TopGradient\";\nvar platform = Platform.OS === 'ios' ? true : false;\nimport SvgUri from \"expo-svg-uri\";\nimport RnModal from 'react-native-modal';\n\nvar Chat = function (_React$Component) {\n  _inherits(Chat, _React$Component);\n\n  var _super = _createSuper(Chat);\n\n  function Chat(props) {\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      lang: props.lang,\n      navigation: props.navigation,\n      users: props.users,\n      chatList: []\n    };\n    return _this;\n  }\n\n  _createClass(Chat, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.props.setTab(true);\n              this.setState({\n                chatList: [{\n                  user: this.state.users[0],\n                  lastMsg: 'Oi dude',\n                  time: '2 часа назад',\n                  media: true\n                }, {\n                  user: this.state.users[1],\n                  lastMsg: 'Would you like to hangin on with me like to hangin on with me',\n                  time: '3 часа назад',\n                  media: false\n                }, {\n                  user: this.state.users[2],\n                  lastMsg: 'Oi dude',\n                  time: '4 часа назад',\n                  media: true,\n                  pay: false\n                }, {\n                  user: this.state.users[3],\n                  lastMsg: 'Oi dude',\n                  time: '5 часа назад',\n                  media: true,\n                  pay: true\n                }]\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: [s.container, s.backColor],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: [s.topBar, s.flexRow, s.spaceBtw, s.aCenter, s.statBarMargin],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: [s.btn50, s.center],\n        activeOpacity: 0.8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }\n      }), width > 350 ? React.createElement(View, {\n        style: [s.btn50],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }\n      }) : null, React.createElement(Text, {\n        style: [s.text24, s.factorBold, s.textBlack],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }\n      }, text[this.state.lang].chat), React.createElement(TouchableOpacity, {\n        style: [s.btn50, s.center],\n        activeOpacity: 0.7,\n        onPress: function onPress() {\n          return _this2.state.navigation.navigate('CreateChat');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }\n      }, React.createElement(SvgUri, {\n        width: \"23\",\n        height: \"23\",\n        source: require(\"../../../assets/images/plus.svg\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }\n      })), React.createElement(TouchableOpacity, {\n        style: [s.btn50, s.center],\n        activeOpacity: 0.7,\n        onPress: function onPress() {\n          return _this2.state.navigation.navigate('MailingModule');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }\n      }, React.createElement(SvgUri, {\n        width: \"20\",\n        height: \"20\",\n        source: require(\"../../../assets/images/users.svg\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }\n      }))), React.createElement(ScrollView, {\n        style: [],\n        showsVerticalScrollIndicator: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }\n      }, this.state.chatList.length > 0 ? this.state.chatList.map(function (entry, index) {\n        return React.createElement(View, {\n          key: index,\n          style: [s.chatListEntry, s.mh15, s.mt10],\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 19\n          }\n        }, React.createElement(View, {\n          style: [s.flexRow],\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 21\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: [s.image50r, s.center, s.mr10],\n          activeOpacity: 0.7,\n          onPress: function onPress() {\n            _this2.state.navigation.navigate('UserPage', {\n              user: entry.user\n            });\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 23\n          }\n        }, React.createElement(Image, {\n          style: [s.image50r],\n          source: entry.user.ava,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }\n        })), React.createElement(TouchableOpacity, {\n          style: [s.flex1, s.jCenter],\n          activeOpacity: 0.7,\n          onPress: function onPress() {\n            entry.pay ? _this2.state.navigation.navigate('PaidChat', {\n              user: entry.user\n            }) : _this2.state.navigation.navigate('ChatModule', {\n              user: entry.user\n            });\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 23\n          }\n        }, React.createElement(View, {\n          style: [s.flexRow, s.aCenter, s.spaceBtw],\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }\n        }, React.createElement(Text, {\n          numberOfLines: 1,\n          style: [s.text18, s.factorBold, s.textBlack, s.mr5, {\n            width: width - 180\n          }],\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 27\n          }\n        }, entry.user.name), React.createElement(Text, {\n          numberOfLines: 1,\n          style: [s.text12, s.factor, s.textGrey2],\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 27\n          }\n        }, entry.time)), entry.media ? React.createElement(View, {\n          style: [s.flexRow, s.aCenter, s.mt5],\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 31\n          }\n        }, React.createElement(SvgUri, {\n          width: \"24\",\n          height: \"24\",\n          source: require(\"../../../assets/images/media.svg\"),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 31\n          }\n        }), React.createElement(Text, {\n          style: [s.text14, s.factor, s.textGrey2, s.ml5],\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 31\n          }\n        }, 'media attachment')) : React.createElement(Text, {\n          numberOfLines: 1,\n          style: [s.text14, s.factor, s.textGrey2, s.mt8],\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 31\n          }\n        }, entry.lastMsg))), index != _this2.state.chatList.length - 1 ? React.createElement(View, {\n          style: [s.greyLine, s.mt15],\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 65\n          }\n        }) : null);\n      }) : React.createElement(Text, {\n        style: [s.text24, s.factorBold, s.textBlack],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }\n      }, text[this.state.lang].emptyList)));\n    }\n  }]);\n\n  return Chat;\n}(React.Component);\n\nexport { Chat as default };","map":{"version":3,"sources":["D:/develop/pypr/HypeFans/mobile_version/screens/main/chat/Chat.js"],"names":["React","useState","useEffect","Dimensions","get","width","height","s","text","TopGradient","platform","Platform","OS","SvgUri","RnModal","Chat","props","state","lang","navigation","users","chatList","setTab","setState","user","lastMsg","time","media","pay","container","backColor","topBar","flexRow","spaceBtw","aCenter","statBarMargin","btn50","center","text24","factorBold","textBlack","chat","navigate","require","length","map","entry","index","chatListEntry","mh15","mt10","image50r","mr10","ava","flex1","jCenter","text18","mr5","name","text12","factor","textGrey2","mt5","text14","ml5","mt8","greyLine","mt15","emptyList","Component"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Image,\r\n  Platform,\r\n  ScrollView,\r\n  StyleSheet,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  TouchableWithoutFeedback,\r\n  KeyboardAvoidingView,\r\n  Keyboard,\r\n  View,\r\n  Dimensions,\r\n} from 'react-native';\r\n\r\nconst { width, height } = Dimensions.get(\"screen\")\r\n\r\nimport s from '../../../styles/style'\r\nimport text from '../../../assets/text/text'\r\n\r\nimport TopGradient from '../../../components/TopGradient'\r\n\r\n\r\nlet platform = Platform.OS === 'ios' ? true : false\r\n\r\nimport SvgUri from \"expo-svg-uri\"\r\nimport RnModal from 'react-native-modal';\r\n\r\nexport default class Chat extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      lang: props.lang,\r\n      navigation: props.navigation,\r\n      users: props.users,\r\n      chatList: [],\r\n    };\r\n  }\r\n\r\n\r\n  async componentDidMount() {\r\n    this.props.setTab(true)\r\n    this.setState({\r\n      chatList: [\r\n        { user: this.state.users[0], lastMsg: 'Oi dude', time: '2 часа назад', media: true },\r\n        { user: this.state.users[1], lastMsg: 'Would you like to hangin on with me like to hangin on with me', time: '3 часа назад', media: false },\r\n        { user: this.state.users[2], lastMsg: 'Oi dude', time: '4 часа назад', media: true, pay: false },\r\n        { user: this.state.users[3], lastMsg: 'Oi dude', time: '5 часа назад', media: true, pay: true },\r\n      ]\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View style={[s.container, s.backColor]} >\r\n\r\n        <View style={[s.topBar, s.flexRow, s.spaceBtw, s.aCenter, s.statBarMargin]}>\r\n          <TouchableOpacity style={[s.btn50, s.center]}\r\n            activeOpacity={0.8}\r\n          //onPress={() => props.onBack()}\r\n          >\r\n            {/* <SvgUri width=\"20\" height=\"20\"\r\n            source={require('../../../assets/images/back.svg')} /> */}\r\n          </TouchableOpacity>\r\n          {\r\n            width > 350\r\n              ?\r\n              <View style={[s.btn50]} />\r\n              : null\r\n          }\r\n\r\n          <Text style={[s.text24, s.factorBold, s.textBlack]}>{text[this.state.lang].chat}</Text>\r\n\r\n          <TouchableOpacity style={[s.btn50, s.center]}\r\n            activeOpacity={0.7}\r\n            onPress={() => this.state.navigation.navigate('CreateChat')}\r\n          >\r\n            <SvgUri width=\"23\" height=\"23\"\r\n              source={require('../../../assets/images/plus.svg')} />\r\n          </TouchableOpacity>\r\n          <TouchableOpacity style={[s.btn50, s.center]}\r\n            activeOpacity={0.7}\r\n            //onPress={() =>  this.state.navigation.navigate('Mailing')} \r\n            onPress={() => this.state.navigation.navigate('MailingModule')}\r\n          >\r\n            <SvgUri width=\"20\" height=\"20\"\r\n              source={require('../../../assets/images/users.svg')} />\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n        <ScrollView style={[]} showsVerticalScrollIndicator={false}>\r\n\r\n          {\r\n            this.state.chatList.length > 0\r\n              ?\r\n              this.state.chatList.map((entry, index) => {\r\n                return (\r\n                  <View key={index} style={[s.chatListEntry, s.mh15, s.mt10]}>\r\n                    <View style={[s.flexRow]}>\r\n\r\n                      <TouchableOpacity style={[s.image50r, s.center, s.mr10]}\r\n                        activeOpacity={0.7}\r\n                        onPress={() => {this.state.navigation.navigate('UserPage', { user: entry.user })}}\r\n                      >\r\n                        <Image\r\n                          style={[s.image50r]}\r\n                          source={entry.user.ava}\r\n                        />\r\n                      </TouchableOpacity>\r\n\r\n\r\n                      <TouchableOpacity style={[s.flex1, s.jCenter]}\r\n                        activeOpacity={0.7}\r\n                        onPress={() => { entry.pay\r\n                          ? this.state.navigation.navigate('PaidChat', { user: entry.user })\r\n                          : this.state.navigation.navigate('ChatModule', { user: entry.user })}}\r\n                      >\r\n                        <View style={[s.flexRow, s.aCenter, s.spaceBtw]}>\r\n                          <Text numberOfLines={1} style={[s.text18, s.factorBold, s.textBlack, s.mr5, { width: width - 180 }]}>{entry.user.name}</Text>\r\n                          <Text numberOfLines={1} style={[s.text12, s.factor, s.textGrey2]}>{entry.time}</Text>\r\n                        </View>\r\n                        {\r\n                          entry.media\r\n                            ? <View style={[s.flexRow, s.aCenter, s.mt5]}>\r\n                              <SvgUri width=\"24\" height=\"24\"\r\n                                source={require('../../../assets/images/media.svg')} />\r\n\r\n                              <Text style={[s.text14, s.factor, s.textGrey2, s.ml5]}>{'media attachment'}</Text>\r\n                            </View>\r\n                            : <Text numberOfLines={1} style={[s.text14, s.factor, s.textGrey2, s.mt8]}>{entry.lastMsg}</Text>\r\n                        }\r\n\r\n                      </TouchableOpacity>\r\n                    </View>\r\n                    { index != this.state.chatList.length - 1 ? <View style={[s.greyLine, s.mt15]} /> : null}\r\n\r\n                  </View>\r\n                )\r\n              })\r\n\r\n              : <Text style={[s.text24, s.factorBold, s.textBlack]}>{text[this.state.lang].emptyList}</Text>\r\n          }\r\n\r\n        </ScrollView>\r\n      </View >\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}