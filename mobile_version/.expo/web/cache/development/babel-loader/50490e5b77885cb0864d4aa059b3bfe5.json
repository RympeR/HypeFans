{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\develop\\\\pypr\\\\HypeFans\\\\mobile_version\\\\screens\\\\main\\\\notifications\\\\Index.js\";\nimport React, { useState, useEffect } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\n\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nimport s from \"../../../styles/style\";\nimport text from \"../../../assets/text/text\";\nimport Notifications from \"./Notifications\";\nimport NoteSettings from \"../settings/NoteSettings\";\nimport NoteSettingsPush from \"../settings/NoteSettingsPush\";\nimport NoteSettingsEmail from \"../settings/NoteSettingsEmail\";\nimport NoteSettingsSite from \"../settings/NoteSettingsSite\";\nimport UserPage from \"../profile/UserPage\";\nimport ChatModule from \"../chat/ChatModule\";\nvar platform = Platform.OS === 'ios' ? true : false;\nimport SvgUri from \"expo-svg-uri\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer } from '@react-navigation/native';\nvar Stack = createStackNavigator();\nexport default function Screen(props) {\n  var _this = this;\n\n  var lang = props.lang;\n  var users = props.users;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      search = _React$useState2[0],\n      setSearch = _React$useState2[1];\n\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Notifications\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, function (nprops) {\n    return React.createElement(Notifications, _extends({}, nprops, {\n      lang: lang,\n      users: users,\n      onBack: function onBack() {\n        return props.onBack();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 24\n      }\n    }));\n  }), React.createElement(Stack.Screen, {\n    name: \"NoteSettings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, function (nprops) {\n    return React.createElement(NoteSettings, _extends({}, nprops, {\n      lang: lang,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 24\n      }\n    }));\n  }), React.createElement(Stack.Screen, {\n    name: \"NoteSettingsPush\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, function (nprops) {\n    return React.createElement(NoteSettingsPush, _extends({}, nprops, {\n      lang: lang,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 24\n      }\n    }));\n  }), React.createElement(Stack.Screen, {\n    name: \"NoteSettingsEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, function (nprops) {\n    return React.createElement(NoteSettingsEmail, _extends({}, nprops, {\n      lang: lang,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 24\n      }\n    }));\n  }), React.createElement(Stack.Screen, {\n    name: \"NoteSettingsSite\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, function (nprops) {\n    return React.createElement(NoteSettingsSite, _extends({}, nprops, {\n      lang: lang,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 24\n      }\n    }));\n  }), React.createElement(Stack.Screen, {\n    name: \"UserPage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, function (nprops) {\n    return React.createElement(UserPage, _extends({}, nprops, {\n      lang: lang,\n      users: props.users,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 24\n      }\n    }));\n  }), React.createElement(Stack.Screen, {\n    name: \"ChatModule\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, function (nprops) {\n    return React.createElement(ChatModule, _extends({}, nprops, {\n      lang: lang,\n      setTab: function setTab(stat) {\n        return props.setTab(stat);\n      },\n      data: props.data,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 24\n      }\n    }));\n  })));\n}","map":{"version":3,"sources":["D:/develop/pypr/HypeFans/mobile_version/screens/main/notifications/Index.js"],"names":["React","useState","useEffect","Dimensions","get","width","height","s","text","Notifications","NoteSettings","NoteSettingsPush","NoteSettingsEmail","NoteSettingsSite","UserPage","ChatModule","platform","Platform","OS","SvgUri","createStackNavigator","NavigationContainer","Stack","Screen","props","lang","users","search","setSearch","headerShown","nprops","onBack","stat","setTab","data"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Image,\r\n  ImageBackground,\r\n  Platform,\r\n  ScrollView,\r\n  StyleSheet,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  TouchableWithoutFeedback,\r\n  KeyboardAvoidingView,\r\n  View,\r\n  Dimensions,\r\n} from 'react-native';\r\n\r\nconst { width, height } = Dimensions.get(\"screen\")\r\n\r\nimport s from '../../../styles/style'\r\nimport text from '../../../assets/text/text'\r\n\r\nimport Notifications from './Notifications'\r\nimport NoteSettings from '../settings/NoteSettings'\r\nimport NoteSettingsPush from '../settings/NoteSettingsPush'\r\nimport NoteSettingsEmail from '../settings/NoteSettingsEmail'\r\nimport NoteSettingsSite from '../settings/NoteSettingsSite'\r\n\r\nimport UserPage from '../profile/UserPage'\r\nimport ChatModule from '../chat/ChatModule'\r\n\r\nlet platform = Platform.OS === 'ios' ? true : false\r\n\r\nimport SvgUri from \"expo-svg-uri\"\r\n\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nexport default function Screen(props) {\r\n\r\n  let lang = props.lang\r\n  let users = props.users\r\n\r\n  let [search, setSearch] = React.useState(false)\r\n\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator\r\n        screenOptions={{\r\n          headerShown: false\r\n        }}\r\n      >\r\n        <Stack.Screen name=\"Notifications\">\r\n          {(nprops) => <Notifications  {...nprops}\r\n            lang={lang}\r\n            users={users}\r\n            onBack={() => props.onBack()}\r\n          />}\r\n        </Stack.Screen>\r\n        <Stack.Screen name=\"NoteSettings\">\r\n          {(nprops) => <NoteSettings  {...nprops}\r\n            lang={lang}\r\n          />}\r\n        </Stack.Screen>\r\n        <Stack.Screen name=\"NoteSettingsPush\">\r\n          {(nprops) => <NoteSettingsPush  {...nprops}\r\n            lang={lang}\r\n          />}\r\n        </Stack.Screen>\r\n        <Stack.Screen name=\"NoteSettingsEmail\">\r\n          {(nprops) => <NoteSettingsEmail  {...nprops}\r\n            lang={lang}\r\n          />}\r\n        </Stack.Screen>\r\n        <Stack.Screen name=\"NoteSettingsSite\">\r\n          {(nprops) => <NoteSettingsSite  {...nprops}\r\n            lang={lang}\r\n          />}\r\n        </Stack.Screen>\r\n\r\n        <Stack.Screen name=\"UserPage\">\r\n          {(nprops) => <UserPage  {...nprops}\r\n            lang={lang}\r\n            users={props.users}\r\n          />}\r\n        </Stack.Screen>\r\n        <Stack.Screen name=\"ChatModule\">\r\n          {(nprops) => <ChatModule  {...nprops}\r\n            lang={lang}\r\n            setTab={(stat) => props.setTab(stat)}\r\n            data={props.data}\r\n          />}\r\n        </Stack.Screen>\r\n\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}