{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\develop\\\\pypr\\\\HypeFans\\\\mobile_version\\\\screens\\\\main\\\\chat\\\\PaidChat.js\";\nimport React, { useState, useEffect } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\n\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nimport s from \"../../../styles/style\";\nimport text from \"../../../assets/text/text\";\nvar platform = Platform.OS === 'ios' ? true : false;\nimport SvgUri from \"expo-svg-uri\";\nexport default function Screen(props) {\n  var lang = props.lang;\n  var navigation = props.navigation;\n  var user = props.route.params.user;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      buttons = _React$useState2[0],\n      setButtons = _React$useState2[1];\n\n  return React.createElement(View, {\n    style: [s.container, s.backColor],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: [s.topBar, s.flexRow, s.spaceBtw, s.aCenter, s.statBarMargin],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: [s.flexRow, s.aCenter],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: [s.btn50, s.center],\n    activeOpacity: 0.8,\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, React.createElement(SvgUri, {\n    width: \"20\",\n    height: \"20\",\n    source: require(\"../../../assets/images/back.svg\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: [s.image50r, s.center, s.mr10],\n    activeOpacity: 0.8,\n    onPress: function onPress() {\n      return navigation.navigate('UserPage', {\n        user: user\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, React.createElement(Image, {\n    style: [s.image50r],\n    source: user.ava,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: [],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: [s.text18, s.factorBold, s.textBlack],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, user.name), React.createElement(Text, {\n    style: [s.text18, s.factor, s.textGrey],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, user.nick))), React.createElement(TouchableOpacity, {\n    style: [s.btn50, s.center],\n    activeOpacity: 0.7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: [s.flex1],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: [s.text18, s.factorBold, s.textCenter, s.textBlack, s.mh30],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, text[lang].chatPay), React.createElement(Text, {\n    style: [s.text18, s.factor, s.textCenter, s.textGrey, s.mt25, s.mh30],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, text[lang].chatPay2 + user.nick, \" \", React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 43\n    }\n  }, text[lang].chatPay3)), React.createElement(TouchableOpacity, {\n    style: [s.orangeBtn, s.center, s.mt25],\n    activeOpacity: 0.9,\n    onPress: function onPress() {\n      return navigation.navigate('ChatModule', {\n        user: user\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: [s.text18, s.factorBold],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, text[lang].chatPayBtn + '$2')), React.createElement(View, {\n    style: [s.flex1],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["D:/develop/pypr/HypeFans/mobile_version/screens/main/chat/PaidChat.js"],"names":["React","useState","useEffect","Dimensions","get","width","height","s","text","platform","Platform","OS","SvgUri","Screen","props","lang","navigation","user","route","params","buttons","setButtons","container","backColor","topBar","flexRow","spaceBtw","aCenter","statBarMargin","btn50","center","goBack","require","image50r","mr10","navigate","ava","text18","factorBold","textBlack","name","factor","textGrey","nick","flex1","textCenter","mh30","chatPay","mt25","chatPay2","chatPay3","orangeBtn","chatPayBtn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Image,\r\n  Platform,\r\n  ScrollView,\r\n  StyleSheet,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  TouchableWithoutFeedback,\r\n  KeyboardAvoidingView,\r\n  Keyboard,\r\n  View,\r\n  Dimensions,\r\n} from 'react-native';\r\n\r\nconst { width, height } = Dimensions.get(\"screen\")\r\n\r\nimport s from '../../../styles/style'\r\nimport text from '../../../assets/text/text'\r\n\r\n\r\nlet platform = Platform.OS === 'ios' ? true : false\r\n\r\nimport SvgUri from \"expo-svg-uri\"\r\n\r\nexport default function Screen(props) {\r\n\r\n  let lang = props.lang\r\n  let navigation = props.navigation\r\n  let user = props.route.params.user\r\n\r\n  let [buttons, setButtons] = React.useState(false)\r\n\r\n\r\n  return (\r\n    <View style={[s.container, s.backColor]}>\r\n\r\n      <View style={[s.topBar, s.flexRow, s.spaceBtw, s.aCenter, s.statBarMargin]}>\r\n\r\n\r\n        <View style={[s.flexRow, s.aCenter]}>\r\n          <TouchableOpacity style={[s.btn50, s.center]}\r\n            activeOpacity={0.8}\r\n            onPress={() => navigation.goBack()}\r\n          >\r\n            <SvgUri width=\"20\" height=\"20\"\r\n              source={require('../../../assets/images/back.svg')} />\r\n          </TouchableOpacity>\r\n          <TouchableOpacity style={[s.image50r, s.center, s.mr10]}\r\n            activeOpacity={0.8}\r\n            onPress={() => navigation.navigate('UserPage', { user: user })}\r\n          >\r\n            <Image\r\n              style={[s.image50r]}\r\n              source={user.ava}\r\n            />\r\n          </TouchableOpacity>\r\n          <View style={[]}>\r\n            <Text style={[s.text18, s.factorBold, s.textBlack]}>{user.name}</Text>\r\n            <Text style={[s.text18, s.factor, s.textGrey]}>{user.nick}</Text>\r\n          </View>\r\n          {/* <View style={[s.flex1]}/> */}\r\n        </View>\r\n\r\n\r\n\r\n        <TouchableOpacity style={[s.btn50, s.center]}\r\n          activeOpacity={0.7}\r\n        //onPress={() => this.setState({ chatSettings: true })}\r\n        >\r\n          {/* <SvgUri width=\"20\" height=\"20\"\r\n            source={require('../../../assets/images/3dots.svg')} /> */}\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      <View style={[s.flex1]} />\r\n\r\n      <Text style={[s.text18, s.factorBold, s.textCenter, s.textBlack, s.mh30]}>{text[lang].chatPay}</Text>\r\n      <Text style={[s.text18, s.factor, s.textCenter, s.textGrey, s.mt25, s.mh30]}>\r\n        {text[lang].chatPay2 + user.nick} <Text>{text[lang].chatPay3}</Text>\r\n      </Text>\r\n\r\n      <TouchableOpacity style={[s.orangeBtn, s.center, s.mt25]}\r\n        activeOpacity={0.9}\r\n        onPress={() => navigation.navigate('ChatModule', { user: user })}\r\n      >\r\n        <Text style={[s.text18, s.factorBold]}>{text[lang].chatPayBtn + '$2'}</Text>\r\n      </TouchableOpacity>\r\n\r\n      <View style={[s.flex1]} />\r\n\r\n    </View >\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}