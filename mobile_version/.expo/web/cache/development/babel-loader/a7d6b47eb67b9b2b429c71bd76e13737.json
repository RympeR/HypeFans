{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\develop\\\\pypr\\\\HypeFans\\\\mobile_version\\\\screens\\\\main\\\\chat\\\\CreateChat.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\n\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nimport s from \"../../../styles/style\";\nimport text from \"../../../assets/text/text\";\nvar platform = Platform.OS === 'ios' ? true : false;\nimport SvgUri from \"expo-svg-uri\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport * as ImagePicker from 'expo-image-picker';\nimport AvaGradient from \"../../../components/AvaGradient\";\nexport default function Screen(props) {\n  var _this = this;\n\n  var lang = props.lang;\n  var navigation = props.navigation;\n  var users = props.users;\n\n  var _useState = useState(text[lang].noname),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      groupImg = _useState4[0],\n      setGroupImg = _useState4[1];\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      group = _React$useState2[0],\n      setGroup = _React$useState2[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      switch1 = _useState6[0],\n      setSwitch1 = _useState6[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      incorrect = _React$useState4[0],\n      setIncorrect = _React$useState4[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$ImagePicker$re, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(Platform.OS !== 'web')) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(ImagePicker.requestMediaLibraryPermissionsAsync());\n\n            case 3:\n              _await$ImagePicker$re = _context.sent;\n              status = _await$ImagePicker$re.status;\n\n              if (status !== 'granted') {\n                alert('Sorry, we need camera roll permissions to make this work!');\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var pickImage = function pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              aspect: [16, 9],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context2.sent;\n            console.log(result);\n\n            if (!result.cancelled) {\n              setGroupImg(result.uri);\n            }\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: [s.container, s.backColor],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: [s.topBar, s.flexRow, s.spaceBtw, s.aCenter, s.statBarMargin],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: [s.btn50, s.center],\n    activeOpacity: 0.8,\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, React.createElement(SvgUri, {\n    width: \"16\",\n    height: \"16\",\n    source: require(\"../../../assets/images/back.svg\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  })), React.createElement(Text, {\n    style: [s.text24, s.factorBold, s.textBlack],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, text[lang].createChat), React.createElement(TouchableOpacity, {\n    style: [s.btn50, s.center],\n    activeOpacity: 0.8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: [s.chatNameBar, s.flexRow, s.aCenter, s.mh15],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: [s.center, {\n      width: 80,\n      height: 80\n    }],\n    activeOpacity: 0.8,\n    onPress: pickImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, groupImg ? React.createElement(Image, {\n    source: [{\n      uri: groupImg\n    }],\n    style: [s.groupImage],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 18\n    }\n  }) : React.createElement(View, {\n    style: [s.center, {\n      width: 80,\n      height: 80\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, React.createElement(AvaGradient, {\n    style: [],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: [s.pabsolute, s.center],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, React.createElement(SvgUri, {\n    width: \"30\",\n    height: \"30\",\n    source: require(\"../../../assets/images/camera1.svg\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 19\n    }\n  })))), React.createElement(View, {\n    style: [s.nameInputBar, s.flex1, s.ml15],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    style: [s.input, s.text14, s.factor, s.textBlack, s.h46],\n    placeholder: text[lang].chatPls,\n    placeholderTextColor: '#aaa',\n    onChangeText: function onChangeText(txt) {\n      return setName(txt);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: [s.greyLine],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }))), React.createElement(TouchableOpacity, {\n    style: [s.h53, s.aCenter, s.flexRow, s.spaceBtw, s.ml15],\n    activeOpacity: 0.8,\n    onPress: function onPress() {\n      return setSwitch1(!switch1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: [s.text18, s.factor, s.textBlack],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, text[lang].enterPrice), React.createElement(View, {\n    style: [s.mh15],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, React.createElement(Switch, {\n    trackColor: {\n      false: \"#ddd\",\n      true: \"#FF6644\"\n    },\n    thumbColor: \"#fff\",\n    ios_backgroundColor: \"#ddd\",\n    onValueChange: function onValueChange() {\n      return setSwitch1(!switch1);\n    },\n    value: switch1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }))), switch1 ? React.createElement(View, {\n    style: [],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: [s.inputBlock, s.mh15, s.flexRow, s.spaceBtw, s.alignCenter, {\n      borderColor: incorrect ? '#f52424' : '#aaa'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: [s.text14, s.factor, s.textBlack, s.ml15],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, '$ '), React.createElement(TextInput, {\n    autoFocus: true,\n    keyboardType: 'numeric',\n    style: [s.input, s.text14, s.factor, s.flex1, s.h46, incorrect ? s.textRed : s.textBlack],\n    placeholder: text[lang].enterSumm,\n    placeholderTextColor: '#999',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }))) : React.createElement(View, {\n    style: [],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: [s.inputBlock, s.mh15, s.flexRow, s.aCenter, {\n      borderColor: '#ddd'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: [s.text14, s.factor, s.textBlack, s.ml15, {\n      color: '#ddd'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, '$ '), React.createElement(Text, {\n    style: [s.text14, s.factor, {\n      color: '#ddd'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }, text[lang].enterSumm))), React.createElement(View, {\n    style: [s.mb10],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }\n  }), React.createElement(ScrollView, {\n    style: [],\n    showsVerticalScrollIndicator: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }\n  }, users.map(function (user, index) {\n    var _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        check = _useState8[0],\n        setCheck = _useState8[1];\n\n    return React.createElement(View, {\n      key: index,\n      style: [check ? s.pinkBack : null],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 15\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: [s.flexRow, s.aCenter, s.spaceBtw, s.mt10, s.mh15],\n      activeOpacity: 0.7,\n      onPress: function onPress() {\n        var arr = group;\n\n        if (check) {\n          var _index = arr.indexOf(user);\n\n          if (_index > -1) {\n            arr.splice(_index, 1);\n          }\n        } else arr.push(user);\n\n        setGroup(arr);\n        setCheck(!check);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: [s.flexRow, s.spaceBtw, s.aCenter],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 19\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: [],\n      activeOpacity: 0.7,\n      onPress: function onPress() {\n        return navigation.navigate('UserPage', {\n          user: user\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 21\n      }\n    }, React.createElement(Image, {\n      style: [s.image50r, s.mr10],\n      source: user.ava,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 23\n      }\n    })), React.createElement(View, {\n      style: [],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 21\n      }\n    }, React.createElement(View, {\n      style: [],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 23\n      }\n    }, React.createElement(Text, {\n      style: [s.text14, s.factorBold, s.textBlack],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 25\n      }\n    }, user.name), React.createElement(Text, {\n      style: [s.text14, s.factor, s.textGrey, s.mt5],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 25\n      }\n    }, user.nick)))), check ? React.createElement(View, {\n      style: [s.checked, s.center],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 23\n      }\n    }, React.createElement(LinearGradient, {\n      style: [s.checkGradient],\n      colors: ['#FF6644', '#FF485C'],\n      start: [0, 0],\n      end: [0, 1],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 25\n      }\n    })) : React.createElement(View, {\n      style: [s.checkBox],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 25\n      }\n    })), React.createElement(View, {\n      style: [s.greyLine, s.mt10, s.mh15],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }\n    }));\n  })), group.length > 0 ? React.createElement(TouchableOpacity, {\n    style: [s.orangeBtn, s.center, s.mt15, s.mb60, s.pabsolute, {\n      width: width - 30,\n      bottom: 0\n    }],\n    activeOpacity: 1,\n    onPress: function onPress() {\n      return navigation.navigate('ChatGroup', {\n        group: group,\n        name: name,\n        image: groupImg\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: [s.text18, s.factorBold],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 11\n    }\n  }, text[lang].sendInvit)) : null);\n}","map":{"version":3,"sources":["D:/develop/pypr/HypeFans/mobile_version/screens/main/chat/CreateChat.js"],"names":["React","useState","useEffect","Dimensions","get","width","height","s","text","platform","Platform","OS","SvgUri","LinearGradient","ImagePicker","AvaGradient","Screen","props","lang","navigation","users","noname","name","setName","groupImg","setGroupImg","group","setGroup","switch1","setSwitch1","incorrect","setIncorrect","requestMediaLibraryPermissionsAsync","status","alert","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","aspect","quality","result","console","log","cancelled","uri","container","backColor","topBar","flexRow","spaceBtw","aCenter","statBarMargin","btn50","center","goBack","require","text24","factorBold","textBlack","createChat","chatNameBar","mh15","groupImage","pabsolute","nameInputBar","flex1","ml15","input","text14","factor","h46","chatPls","txt","greyLine","h53","text18","enterPrice","false","true","inputBlock","alignCenter","borderColor","textRed","enterSumm","color","mb10","map","user","index","check","setCheck","pinkBack","mt10","arr","indexOf","splice","push","navigate","image50r","mr10","ava","textGrey","mt5","nick","checked","checkGradient","checkBox","length","orangeBtn","mt15","mb60","bottom","image","sendInvit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Animated,\r\n  Image,\r\n  ImageBackground,\r\n  Platform,\r\n  ScrollView,\r\n  StyleSheet,\r\n  Switch,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  TouchableWithoutFeedback,\r\n  KeyboardAvoidingView,\r\n  View,\r\n  Dimensions,\r\n  BackHandler\r\n} from 'react-native';\r\n\r\nconst { width, height } = Dimensions.get(\"screen\")\r\n\r\nimport s from '../../../styles/style'\r\nimport text from '../../../assets/text/text'\r\n\r\nlet platform = Platform.OS === 'ios' ? true : false\r\n\r\nimport SvgUri from \"expo-svg-uri\"\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport * as ImagePicker from 'expo-image-picker';\r\n\r\nimport AvaGradient from '../../../components/AvaGradient'\r\n\r\nexport default function Screen(props) {\r\n\r\n  let lang = props.lang\r\n  let navigation = props.navigation\r\n\r\n  let users = props.users\r\n\r\n  let [name, setName] = useState(text[lang].noname)\r\n  //let [groupImg, setGroupImg] = useState(require('../../../assets/images/ava5.png'))\r\n  let [groupImg, setGroupImg] = useState(null)\r\n  let [group, setGroup] = React.useState([])\r\n  let [switch1, setSwitch1] = useState(false);\r\n  let [incorrect, setIncorrect] = React.useState(false)\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (Platform.OS !== 'web') {\r\n        const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n        if (status !== 'granted') {\r\n          alert('Sorry, we need camera roll permissions to make this work!');\r\n        }\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const pickImage = async () => {\r\n    let result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n      //allowsEditing: true,\r\n      aspect: [16, 9],\r\n      quality: 1,\r\n    });\r\n\r\n    console.log(result);\r\n\r\n    if (!result.cancelled) {\r\n      setGroupImg(result.uri);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <View style={[s.container, s.backColor]}>\r\n\r\n      <View style={[s.topBar, s.flexRow, s.spaceBtw, s.aCenter, s.statBarMargin]}>\r\n        <TouchableOpacity style={[s.btn50, s.center]}\r\n          activeOpacity={0.8}\r\n          onPress={() => navigation.goBack()}\r\n        >\r\n          <SvgUri width=\"16\" height=\"16\"\r\n            source={require('../../../assets/images/back.svg')} />\r\n        </TouchableOpacity>\r\n        <Text style={[s.text24, s.factorBold, s.textBlack]}>{text[lang].createChat}</Text>\r\n\r\n        <TouchableOpacity style={[s.btn50, s.center]}\r\n          activeOpacity={0.8}\r\n        //onPress={() => navigation.navigate('NoteSettings')}\r\n        >\r\n          {/* <SvgUri width=\"30\" height=\"30\"\r\n            source={require('../../../assets/images/settings.svg')} /> */}\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      <View style={[s.chatNameBar, s.flexRow, s.aCenter, s.mh15]}>\r\n        <TouchableOpacity style={[s.center, { width: 80, height: 80 }]}\r\n          activeOpacity={0.8}\r\n          onPress={pickImage}\r\n        >\r\n          { // groupImage?\r\n            groupImg\r\n              ?  <Image source={[{ uri: groupImg }]} style={[s.groupImage]} />\r\n              : <View style={[s.center, { width: 80, height: 80 }]}>\r\n                <AvaGradient style={[]} />\r\n                <View style={[s.pabsolute, s.center]}>\r\n                  <SvgUri width=\"30\" height=\"30\"\r\n                    source={require('../../../assets/images/camera1.svg')} />\r\n                </View>\r\n              </View>\r\n          }\r\n\r\n        </TouchableOpacity>\r\n\r\n        <View style={[s.nameInputBar, s.flex1, s.ml15]}>\r\n          <TextInput\r\n            style={[s.input, s.text14, s.factor, s.textBlack, s.h46]}\r\n            placeholder={text[lang].chatPls}\r\n            placeholderTextColor={'#aaa'}\r\n            onChangeText={(txt)=>setName(txt)}\r\n          />\r\n          <View style={[s.greyLine]} />\r\n        </View>\r\n      </View>\r\n\r\n\r\n\r\n      <TouchableOpacity style={[s.h53, s.aCenter, s.flexRow, s.spaceBtw, s.ml15]}\r\n        activeOpacity={0.8}\r\n        onPress={() => setSwitch1(!switch1)}\r\n      >\r\n        <Text style={[s.text18, s.factor, s.textBlack]}>{text[lang].enterPrice}</Text>\r\n        <View style={[s.mh15]}>\r\n          <Switch\r\n            trackColor={{ false: \"#ddd\", true: \"#FF6644\" }}\r\n            thumbColor={\"#fff\"}\r\n            ios_backgroundColor=\"#ddd\"\r\n            onValueChange={() => setSwitch1(!switch1)}\r\n            value={switch1}\r\n          />\r\n        </View>\r\n      </TouchableOpacity>\r\n\r\n      { switch1\r\n        ?\r\n        <View style={[]}>\r\n          <View style={[s.inputBlock, s.mh15, s.flexRow, s.spaceBtw, s.alignCenter,\r\n          { borderColor: incorrect ? '#f52424' : '#aaa' }\r\n          ]}>\r\n            <Text style={[s.text14, s.factor, s.textBlack, s.ml15]}>{'$ '}</Text>\r\n            <TextInput\r\n              autoFocus={true}\r\n              keyboardType={'numeric'}\r\n              style={[s.input, s.text14, s.factor, s.flex1, s.h46,\r\n              incorrect ? s.textRed : s.textBlack]}\r\n              placeholder={text[lang].enterSumm}\r\n              placeholderTextColor={'#999'}\r\n            />\r\n          </View>\r\n        </View>\r\n        :\r\n        <View style={[]}>\r\n          <View style={[s.inputBlock, s.mh15, s.flexRow, s.aCenter, { borderColor: '#ddd' }\r\n          ]}>\r\n            <Text style={[s.text14, s.factor, s.textBlack, s.ml15, { color: '#ddd' }]}>{'$ '}</Text>\r\n            <Text style={[s.text14, s.factor, { color: '#ddd' }]}>{text[lang].enterSumm}</Text>\r\n          </View>\r\n        </View>\r\n      }\r\n\r\n      <View style={[s.mb10]} />\r\n\r\n      <ScrollView style={[]} showsVerticalScrollIndicator={false}>\r\n\r\n        {\r\n          users.map((user, index) => {\r\n            let [check, setCheck] = useState(false)\r\n            return (\r\n              <View key={index} style={[check ? s.pinkBack : null]}>\r\n                <TouchableOpacity style={[s.flexRow, s.aCenter, s.spaceBtw, s.mt10, s.mh15]}\r\n                  activeOpacity={0.7}\r\n                  onPress={() => {\r\n\r\n                    let arr = group\r\n                    if (check) {\r\n                      let index = arr.indexOf(user);\r\n                      if (index > -1) {\r\n                        arr.splice(index, 1);\r\n                      }\r\n                    } else arr.push(user)\r\n                    setGroup(arr)\r\n                    setCheck(!check)\r\n                    //console.log(group.length)\r\n                  }}\r\n                >\r\n                  <View style={[s.flexRow, s.spaceBtw, s.aCenter]}>\r\n                    <TouchableOpacity style={[]}\r\n                      activeOpacity={0.7}\r\n                      onPress={() => navigation.navigate('UserPage', { user: user })}\r\n                    >\r\n                      <Image\r\n                        style={[s.image50r, s.mr10]}\r\n                        source={user.ava}\r\n                      />\r\n                    </TouchableOpacity>\r\n                    <View style={[]}>\r\n                      <View style={[]}>\r\n                        <Text style={[s.text14, s.factorBold, s.textBlack]}>{user.name}</Text>\r\n                        <Text style={[s.text14, s.factor, s.textGrey, s.mt5]}>{user.nick}</Text>\r\n                      </View>\r\n                    </View>\r\n                  </View>\r\n\r\n                  {\r\n                    check\r\n                      ?\r\n                      <View style={[s.checked, s.center]}>\r\n                        <LinearGradient\r\n                          style={[s.checkGradient]}\r\n                          colors={['#FF6644', '#FF485C']}\r\n                          start={[0, 0]} end={[0, 1]}\r\n                        />\r\n                      </View>\r\n                      : <View style={[s.checkBox]} />\r\n                  }\r\n\r\n                </TouchableOpacity>\r\n                <View style={[s.greyLine, s.mt10, s.mh15]} />\r\n              </View>\r\n            )\r\n          })}\r\n\r\n\r\n      </ScrollView>\r\n\r\n      {group.length > 0\r\n        ?\r\n        <TouchableOpacity style={[s.orangeBtn, s.center, s.mt15, s.mb60, s.pabsolute,\r\n           {width: width-30, bottom: 0 }]}\r\n          activeOpacity={1}\r\n          onPress={() => navigation.navigate('ChatGroup', {group: group, name: name, image: groupImg})}\r\n        >\r\n          <Text style={[s.text18, s.factorBold]}>{text[lang].sendInvit}</Text>\r\n        </TouchableOpacity>\r\n        : null\r\n      }\r\n\r\n    </View >\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}