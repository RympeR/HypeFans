{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\develop\\\\pypr\\\\HypeFans\\\\mobile_version\\\\screens\\\\main\\\\settings\\\\SecurityBlocked.js\";\nimport React, { useState, useEffect } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\n\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nimport s from \"../../../styles/style\";\nimport text from \"../../../assets/text/text\";\nvar platform = Platform.OS === 'ios' ? true : false;\nimport SvgUri from \"expo-svg-uri\";\nexport default function Screen(props) {\n  var _this = this;\n\n  var lang = props.lang;\n  var navigation = props.navigation;\n\n  var _useState = useState(props.users),\n      _useState2 = _slicedToArray(_useState, 2),\n      blackList = _useState2[0],\n      setBlackList = _useState2[1];\n\n  var users = props.users;\n  return React.createElement(View, {\n    style: [s.container, s.backColor],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: [s.topBar, s.flexRow, s.spaceBtw, s.aCenter, s.statBarMargin],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: [s.btn50, s.center],\n    activeOpacity: 0.8,\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, React.createElement(SvgUri, {\n    width: \"16\",\n    height: \"16\",\n    source: require(\"../../../assets/images/back.svg\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: [s.center, {\n      width: width - 120\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: [s.text24, s.factorBold, s.textBlack, s.textCenter],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, text[lang].blockAccounts)), React.createElement(TouchableOpacity, {\n    style: [s.btn50, s.center],\n    activeOpacity: 0.8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: [s.pinkLine],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), React.createElement(ScrollView, {\n    style: [],\n    showsVerticalScrollIndicator: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, blackList.map(function (user, index) {\n    return React.createElement(View, {\n      key: index,\n      style: [s.h53, s.aCenter, s.flexRow, s.spaceBtw, s.ml15, s.mt15],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: [s.aCenter, s.flexRow, {\n        width: width - 240\n      }],\n      activeOpacity: 0.8,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    }, React.createElement(Image, {\n      style: [s.image50r, s.mr10],\n      source: user.ava,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }), React.createElement(View, {\n      style: [],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      numberOfLines: 1,\n      style: [s.text14, s.factorBold, s.textBlack],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 19\n      }\n    }, user.name), React.createElement(Text, {\n      numberOfLines: 1,\n      style: [s.text14, s.factor, s.textGrey, s.mt5],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 19\n      }\n    }, user.nick))), React.createElement(View, {\n      style: [s.flex1],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }\n    }), React.createElement(TouchableOpacity, {\n      style: [s.unblockBtn, s.center, s.mh15],\n      activeOpacity: 0.8,\n      onPress: function onPress() {\n        setBlackList(blackList.filter(function (user, i) {\n          return i != index;\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, React.createElement(Text, {\n      style: [s.text14, s.factor, s.textBlack],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, text[lang].unblock)));\n  }), React.createElement(View, {\n    style: {\n      height: 60\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["D:/develop/pypr/HypeFans/mobile_version/screens/main/settings/SecurityBlocked.js"],"names":["React","useState","useEffect","Dimensions","get","width","height","s","text","platform","Platform","OS","SvgUri","Screen","props","lang","navigation","users","blackList","setBlackList","container","backColor","topBar","flexRow","spaceBtw","aCenter","statBarMargin","btn50","center","goBack","require","text24","factorBold","textBlack","textCenter","blockAccounts","pinkLine","map","user","index","h53","ml15","mt15","image50r","mr10","ava","text14","name","factor","textGrey","mt5","nick","flex1","unblockBtn","mh15","filter","i","unblock"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Animated,\r\n  Image,\r\n  ImageBackground,\r\n  Platform,\r\n  ScrollView,\r\n  StyleSheet,\r\n  Switch,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  TouchableWithoutFeedback,\r\n  KeyboardAvoidingView,\r\n  View,\r\n  Dimensions,\r\n  BackHandler\r\n} from 'react-native';\r\n\r\nconst { width, height } = Dimensions.get(\"screen\")\r\n\r\nimport s from '../../../styles/style'\r\nimport text from '../../../assets/text/text'\r\n\r\nlet platform = Platform.OS === 'ios' ? true : false\r\n\r\nimport SvgUri from \"expo-svg-uri\"\r\n\r\n\r\nexport default function Screen(props) {\r\n\r\n  let lang = props.lang\r\n  let navigation = props.navigation\r\n\r\n  let [blackList, setBlackList] = useState(props.users)\r\n\r\n  let users = props.users\r\n\r\n\r\n  return (\r\n    <View style={[s.container, s.backColor]}>\r\n\r\n      <View style={[s.topBar, s.flexRow, s.spaceBtw, s.aCenter, s.statBarMargin]}>\r\n        <TouchableOpacity style={[s.btn50, s.center]}\r\n          activeOpacity={0.8}\r\n          onPress={() => navigation.goBack()}\r\n        >\r\n          <SvgUri width=\"16\" height=\"16\"\r\n            source={require('../../../assets/images/back.svg')} />\r\n        </TouchableOpacity>\r\n\r\n        <View style={[s.center, { width: width - 120 }]}>\r\n          <Text style={[s.text24, s.factorBold, s.textBlack, s.textCenter]}>{text[lang].blockAccounts}</Text>\r\n        </View>\r\n\r\n        <TouchableOpacity style={[s.btn50, s.center]}\r\n          activeOpacity={0.8}\r\n        //onPress={() => navigation.navigate('NoteSettings')}\r\n        >\r\n          {/* <SvgUri width=\"30\" height=\"30\"\r\n            source={require('../../../assets/images/settings.svg')} /> */}\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      <View style={[s.pinkLine]} />\r\n\r\n      <ScrollView style={[]} showsVerticalScrollIndicator={false}>\r\n        {\r\n          blackList.map((user, index) => (\r\n            <View key={index} style={[s.h53, s.aCenter, s.flexRow, s.spaceBtw, s.ml15, s.mt15]}>\r\n              <TouchableOpacity style={[s.aCenter, s.flexRow, { width: width - 240 }]}\r\n                activeOpacity={0.8}\r\n              //onPress={() => props.onSkip()}\r\n              >\r\n                <Image\r\n                  style={[s.image50r, s.mr10]}\r\n                  source={user.ava}\r\n                />\r\n                <View style={[]}>\r\n                  <Text numberOfLines={1} style={[s.text14, s.factorBold, s.textBlack]}>{user.name}</Text>\r\n                  <Text numberOfLines={1} style={[s.text14, s.factor, s.textGrey, s.mt5]}>{user.nick}</Text>\r\n                </View>\r\n              </TouchableOpacity>\r\n\r\n\r\n              <View style={[s.flex1]} />\r\n\r\n              <TouchableOpacity style={[s.unblockBtn, s.center, s.mh15]}\r\n                activeOpacity={0.8}\r\n                onPress={() => {\r\n                  setBlackList(blackList.filter((user, i) => i != index))\r\n                }}\r\n              >\r\n                <Text style={[s.text14, s.factor, s.textBlack]}>{text[lang].unblock}</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          ))\r\n        }\r\n\r\n        <View style={{ height: 60 }} />\r\n      </ScrollView>\r\n    </View >\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}