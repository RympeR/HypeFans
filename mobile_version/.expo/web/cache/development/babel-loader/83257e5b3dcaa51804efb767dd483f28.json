{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\develop\\\\pypr\\\\HypeFans\\\\mobile_version\\\\screens\\\\main\\\\settings\\\\Language.js\";\nimport React, { useState, useEffect } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\n\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nimport s from \"../../../styles/style\";\nimport text from \"../../../assets/text/text\";\nvar platform = Platform.OS === 'ios' ? true : false;\nimport SvgUri from \"expo-svg-uri\";\nexport default function Screen(props) {\n  var lang = props.lang;\n  var navigation = props.navigation;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      switch1 = _useState2[0],\n      setSwitch1 = _useState2[1];\n\n  useEffect(function () {\n    var backAction = function backAction() {\n      navigation.goBack();\n      return true;\n    };\n\n    var backHandler = BackHandler.addEventListener(\"hardwareBackPress\", backAction);\n    return function () {\n      return backHandler.remove();\n    };\n  }, []);\n  return React.createElement(View, {\n    style: [s.container, s.backColor],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: [s.topBar, s.flexRow, s.spaceBtw, s.aCenter, s.statBarMargin],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: [s.btn50, s.center],\n    activeOpacity: 0.8,\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, React.createElement(SvgUri, {\n    width: \"16\",\n    height: \"16\",\n    source: require(\"../../../assets/images/back.svg\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  })), React.createElement(Text, {\n    style: [s.text24, s.factorBold, s.textBlack],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, text[lang].lang), React.createElement(TouchableOpacity, {\n    style: [s.btn50, s.center],\n    activeOpacity: 0.8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: [s.pinkLine],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: [s.h53, s.aCenter, s.flexRow, s.ml15],\n    activeOpacity: 0.8,\n    onPress: function onPress() {\n      return props.onLangChange(0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: [s.text18, s.textBlack, lang == 0 ? s.factorBold : s.factor],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, text[0].language), React.createElement(View, {\n    style: [s.mh10],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, lang == 0 ? React.createElement(SvgUri, {\n    width: \"30\",\n    height: \"30\",\n    source: require(\"../../../assets/images/check.svg\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }) : null)), React.createElement(View, {\n    style: [s.greyLine, s.mh15],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: [s.h53, s.aCenter, s.flexRow, s.ml15],\n    activeOpacity: 0.8,\n    onPress: function onPress() {\n      return props.onLangChange(1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: [s.text18, s.textBlack, lang == 1 ? s.factorBold : s.factor],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, text[1].language), React.createElement(View, {\n    style: [s.mh10],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, lang == 1 ? React.createElement(SvgUri, {\n    width: \"30\",\n    height: \"30\",\n    source: require(\"../../../assets/images/check.svg\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }) : null)), React.createElement(View, {\n    style: [s.greyLine, s.mh15],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: [s.h53, s.aCenter, s.flexRow, s.ml15],\n    activeOpacity: 0.8,\n    onPress: function onPress() {\n      return props.onLangChange(2);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: [s.text18, s.textBlack, lang == 2 ? s.factorBold : s.factor],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, text[2].language), React.createElement(View, {\n    style: [s.mh10],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, lang == 2 ? React.createElement(SvgUri, {\n    width: \"30\",\n    height: \"30\",\n    source: require(\"../../../assets/images/check.svg\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }) : null)), React.createElement(View, {\n    style: [s.greyLine, s.mh15],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["D:/develop/pypr/HypeFans/mobile_version/screens/main/settings/Language.js"],"names":["React","useState","useEffect","Dimensions","get","width","height","s","text","platform","Platform","OS","SvgUri","Screen","props","lang","navigation","switch1","setSwitch1","backAction","goBack","backHandler","BackHandler","addEventListener","remove","container","backColor","topBar","flexRow","spaceBtw","aCenter","statBarMargin","btn50","center","require","text24","factorBold","textBlack","pinkLine","h53","ml15","onLangChange","text18","factor","language","mh10","greyLine","mh15"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Animated,\r\n  Image,\r\n  ImageBackground,\r\n  Platform,\r\n  ScrollView,\r\n  StyleSheet,\r\n  Switch,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  TouchableWithoutFeedback,\r\n  KeyboardAvoidingView,\r\n  View,\r\n  Dimensions,\r\n  BackHandler\r\n} from 'react-native';\r\n\r\nconst { width, height } = Dimensions.get(\"screen\")\r\n\r\nimport s from '../../../styles/style'\r\nimport text from '../../../assets/text/text'\r\n\r\nlet platform = Platform.OS === 'ios' ? true : false\r\n\r\nimport SvgUri from \"expo-svg-uri\"\r\n\r\n\r\nexport default function Screen(props) {\r\n\r\n  let lang = props.lang\r\n  let navigation = props.navigation\r\n\r\n  const [switch1, setSwitch1] = useState(true);\r\n\r\n    // Android back\r\n    useEffect(() => {\r\n      const backAction = () => {\r\n        navigation.goBack()\r\n        return true;\r\n      };\r\n      const backHandler = BackHandler.addEventListener(\r\n        \"hardwareBackPress\",\r\n        backAction\r\n      );\r\n      return () => backHandler.remove();\r\n    }, []);\r\n\r\n\r\n  return (\r\n    <View style={[s.container, s.backColor]}>\r\n\r\n      <View style={[s.topBar, s.flexRow, s.spaceBtw, s.aCenter, s.statBarMargin]}>\r\n        <TouchableOpacity style={[s.btn50, s.center]}\r\n          activeOpacity={0.8}\r\n          onPress={() => navigation.goBack()}\r\n        >\r\n          <SvgUri width=\"16\" height=\"16\"\r\n            source={require('../../../assets/images/back.svg')} />\r\n        </TouchableOpacity>\r\n        <Text style={[s.text24, s.factorBold, s.textBlack]}>{text[lang].lang}</Text>\r\n\r\n        <TouchableOpacity style={[s.btn50, s.center]}\r\n          activeOpacity={0.8}\r\n        //onPress={() => navigation.navigate('NoteSettings')}\r\n        >\r\n          {/* <SvgUri width=\"30\" height=\"30\"\r\n            source={require('../../../assets/images/settings.svg')} /> */}\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      <View style={[s.pinkLine]} />\r\n\r\n      <TouchableOpacity style={[s.h53, s.aCenter, s.flexRow, s.ml15]}\r\n        activeOpacity={0.8}\r\n        onPress={() => props.onLangChange(0)}\r\n      >\r\n        <Text style={[s.text18, s.textBlack, lang == 0 ? s.factorBold : s.factor ]}>\r\n          {text[0].language}</Text>\r\n        <View style={[s.mh10]}>\r\n          {\r\n            lang == 0\r\n              ?\r\n              <SvgUri width=\"30\" height=\"30\"\r\n                source={require('../../../assets/images/check.svg')} />\r\n              : null\r\n          }\r\n\r\n        </View>\r\n      </TouchableOpacity>\r\n      <View style={[s.greyLine, s.mh15]} />\r\n\r\n      <TouchableOpacity style={[s.h53, s.aCenter, s.flexRow, s.ml15]}\r\n        activeOpacity={0.8}\r\n        onPress={() => props.onLangChange(1)}\r\n      >\r\n        <Text style={[s.text18, s.textBlack, lang == 1 ? s.factorBold : s.factor ]}>\r\n          {text[1].language}</Text>\r\n        <View style={[s.mh10]}>\r\n          {\r\n            lang == 1\r\n              ?\r\n              <SvgUri width=\"30\" height=\"30\"\r\n                source={require('../../../assets/images/check.svg')} />\r\n              : null\r\n          }\r\n\r\n        </View>\r\n      </TouchableOpacity>\r\n      <View style={[s.greyLine, s.mh15]} />\r\n\r\n      <TouchableOpacity style={[s.h53, s.aCenter, s.flexRow, s.ml15]}\r\n        activeOpacity={0.8}\r\n        onPress={() => props.onLangChange(2)}\r\n      >\r\n        <Text style={[s.text18, s.textBlack, lang == 2 ? s.factorBold : s.factor ]}>\r\n          {text[2].language}</Text>\r\n        <View style={[s.mh10]}>\r\n          {\r\n            lang == 2\r\n              ?\r\n              <SvgUri width=\"30\" height=\"30\"\r\n                source={require('../../../assets/images/check.svg')} />\r\n              : null\r\n          }\r\n\r\n        </View>\r\n      </TouchableOpacity>\r\n      <View style={[s.greyLine, s.mh15]} />\r\n\r\n\r\n    </View >\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}