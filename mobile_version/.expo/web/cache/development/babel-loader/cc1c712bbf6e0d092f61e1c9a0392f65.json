{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\develop\\\\pypr\\\\HypeFans\\\\mobile_version\\\\screens\\\\main\\\\settings\\\\AccountPhone.js\";\nimport React, { useState, useEffect } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\n\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nimport s from \"../../../styles/style\";\nimport text from \"../../../assets/text/text\";\nvar platform = Platform.OS === 'ios' ? true : false;\nimport PhoneCode from \"./PhoneCode\";\nimport SvgUri from \"expo-svg-uri\";\nimport RnModal from 'react-native-modal';\nimport { TextInputMask } from 'react-native-masked-text';\nexport default function Screen(props) {\n  var lang = props.lang;\n  var navigation = props.navigation;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      incorrect = _React$useState2[0],\n      setIncorrect = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      acceptable = _React$useState4[0],\n      setAcceptable = _React$useState4[1];\n\n  var _React$useState5 = React.useState(''),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      number = _React$useState6[0],\n      setNumber = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      sentModal = _React$useState8[0],\n      setSentModal = _React$useState8[1];\n\n  return React.createElement(View, {\n    style: [s.container, s.backColor],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: [s.topBar, s.flexRow, s.spaceBtw, s.aCenter, s.statBarMargin],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: [s.btn50, s.center],\n    activeOpacity: 0.8,\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, React.createElement(SvgUri, {\n    width: \"16\",\n    height: \"16\",\n    source: require(\"../../../assets/images/back.svg\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  })), React.createElement(Text, {\n    style: [s.text24, s.factorBold, s.textBlack],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, text[lang].phone), React.createElement(TouchableOpacity, {\n    style: [s.btn50, s.center],\n    activeOpacity: 0.8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: [s.pinkLine],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: [s.text14, s.factor, s.textBlack, s.mh15, s.mt15],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, text[lang].phone), React.createElement(View, {\n    style: [s.inputBlock, s.mt15, s.mh15, s.flexRow, s.spaceBtw, s.alignCenter, {\n      borderColor: incorrect ? '#f52424' : '#aaa'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInputMask, {\n    type: 'cel-phone',\n    options: {\n      maskType: 'INTERNATIONAL',\n      withDDD: true,\n      dddMask: '(99) '\n    },\n    keyboardType: 'phone-pad',\n    style: [s.input, s.text14, s.factor, s.flex1, s.h46, s.mh15, incorrect ? s.textRed : s.textBlack],\n    placeholder: text[lang].phone,\n    placeholderTextColor: '#aaa',\n    onChangeText: function onChangeText(txt) {\n      return setNumber(txt);\n    },\n    value: number,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), acceptable ? React.createElement(View, {\n    style: [s.mh15],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, React.createElement(SvgUri, {\n    width: \"16\",\n    height: \"16\",\n    source: require(\"../../../assets/images/check.svg\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  })) : null), incorrect ? React.createElement(Text, {\n    style: [s.text14, s.factor, s.mt5, s.textRed, s.mh15],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, text[lang].nick) : null, number.length > 0 ? React.createElement(TouchableOpacity, {\n    style: [s.orangeBtn, s.center, s.mt25, s.mb50],\n    activeOpacity: 0.9,\n    onPress: function onPress() {\n      return setSentModal(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: [s.text18, s.factorBold],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, text[lang].save)) : React.createElement(TouchableOpacity, {\n    style: [s.disableBtn, s.center, s.mt25, s.mb50],\n    activeOpacity: 0.9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: [s.text18, s.factorBold, s.textGrey],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, text[lang].save)), React.createElement(RnModal, {\n    style: {\n      margin: 0\n    },\n    coverScreen: false,\n    isVisible: sentModal,\n    animationIn: 'fadeIn',\n    animationOut: 'fadeOut',\n    scrollOffset: 100,\n    swipeDirection: 'down',\n    onSwipeComplete: function onSwipeComplete() {\n      return navigation.goBack();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, React.createElement(PhoneCode, {\n    lang: lang,\n    navigation: navigation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["D:/develop/pypr/HypeFans/mobile_version/screens/main/settings/AccountPhone.js"],"names":["React","useState","useEffect","Dimensions","get","width","height","s","text","platform","Platform","OS","PhoneCode","SvgUri","RnModal","TextInputMask","Screen","props","lang","navigation","incorrect","setIncorrect","acceptable","setAcceptable","number","setNumber","sentModal","setSentModal","container","backColor","topBar","flexRow","spaceBtw","aCenter","statBarMargin","btn50","center","goBack","require","text24","factorBold","textBlack","phone","pinkLine","text14","factor","mh15","mt15","inputBlock","alignCenter","borderColor","maskType","withDDD","dddMask","input","flex1","h46","textRed","txt","mt5","nick","length","orangeBtn","mt25","mb50","text18","save","disableBtn","textGrey","margin"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Animated,\r\n  Image,\r\n  ImageBackground,\r\n  Platform,\r\n  ScrollView,\r\n  StyleSheet,\r\n  Switch,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  TouchableWithoutFeedback,\r\n  KeyboardAvoidingView,\r\n  View,\r\n  Dimensions,\r\n  BackHandler\r\n} from 'react-native';\r\n\r\nconst { width, height } = Dimensions.get(\"screen\")\r\n\r\nimport s from '../../../styles/style'\r\nimport text from '../../../assets/text/text'\r\n\r\nlet platform = Platform.OS === 'ios' ? true : false\r\n\r\nimport PhoneCode from './PhoneCode'\r\n\r\nimport SvgUri from \"expo-svg-uri\"\r\nimport RnModal from 'react-native-modal';\r\nimport { TextInputMask } from 'react-native-masked-text'\r\n\r\nexport default function Screen(props) {\r\n\r\n  let lang = props.lang\r\n  let navigation = props.navigation\r\n\r\n  let [incorrect, setIncorrect] = React.useState(false)\r\n  let [acceptable, setAcceptable] = React.useState(false)\r\n  let [number, setNumber] = React.useState('')\r\n\r\n  let [sentModal, setSentModal] = React.useState(false)\r\n\r\n  return (\r\n    <View style={[s.container, s.backColor]}>\r\n\r\n      <View style={[s.topBar, s.flexRow, s.spaceBtw, s.aCenter, s.statBarMargin]}>\r\n        <TouchableOpacity style={[s.btn50, s.center]}\r\n          activeOpacity={0.8}\r\n          onPress={() => navigation.goBack()}\r\n        >\r\n          <SvgUri width=\"16\" height=\"16\"\r\n            source={require('../../../assets/images/back.svg')} />\r\n        </TouchableOpacity>\r\n        <Text style={[s.text24, s.factorBold, s.textBlack]}>{text[lang].phone}</Text>\r\n\r\n        <TouchableOpacity style={[s.btn50, s.center]}\r\n          activeOpacity={0.8}\r\n        //onPress={() => navigation.navigate('NoteSettings')}\r\n        >\r\n          {/* <SvgUri width=\"30\" height=\"30\"\r\n            source={require('../../../assets/images/settings.svg')} /> */}\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      <View style={[s.pinkLine]} />\r\n\r\n\r\n      <Text style={[s.text14, s.factor, s.textBlack, s.mh15, s.mt15]}>{text[lang].phone}</Text>\r\n\r\n      <View style={[s.inputBlock, s.mt15, s.mh15, s.flexRow, s.spaceBtw, s.alignCenter,\r\n      { borderColor: incorrect ? '#f52424' : '#aaa' }\r\n      ]}>\r\n        <TextInputMask\r\n          type={'cel-phone'}\r\n          options={{\r\n            maskType: 'INTERNATIONAL',\r\n            withDDD: true,\r\n            dddMask: '(99) '\r\n          }}\r\n          keyboardType={'phone-pad'}\r\n          style={[s.input, s.text14, s.factor, s.flex1, s.h46, s.mh15,\r\n          incorrect ? s.textRed : s.textBlack]}\r\n          placeholder={text[lang].phone}\r\n          placeholderTextColor={'#aaa'}\r\n          onChangeText={(txt) => setNumber(txt)}\r\n          value={number}\r\n        />\r\n        {\r\n          acceptable\r\n            ?\r\n            <View style={[s.mh15]}>\r\n              <SvgUri width=\"16\" height=\"16\"\r\n                source={require('../../../assets/images/check.svg')} />\r\n            </View>\r\n            : null\r\n        }\r\n      </View>\r\n      {incorrect\r\n        ? <Text style={[s.text14, s.factor, s.mt5, s.textRed, s.mh15]}>{text[lang].nick}</Text>\r\n        : null\r\n      }\r\n\r\n      {/* <View style={[s.flex1]} /> */}\r\n\r\n      {\r\n        number.length>0\r\n          ?\r\n          <TouchableOpacity style={[s.orangeBtn, s.center, s.mt25, s.mb50]}\r\n            activeOpacity={0.9}\r\n            onPress={() => setSentModal(true)} //navigation.goBack()}\r\n          >\r\n            <Text style={[s.text18, s.factorBold]}>{text[lang].save}</Text>\r\n          </TouchableOpacity>\r\n          :\r\n          <TouchableOpacity style={[s.disableBtn, s.center, s.mt25, s.mb50]}\r\n            activeOpacity={0.9}\r\n          //onPress={() => props.onSkip()}\r\n          >\r\n            <Text style={[s.text18, s.factorBold, s.textGrey]}>{text[lang].save}</Text>\r\n          </TouchableOpacity>\r\n      }\r\n\r\n\r\n      <RnModal\r\n        style={{ margin: 0 }}\r\n        coverScreen={false}\r\n        isVisible={sentModal}\r\n        animationIn={'fadeIn'}\r\n        animationOut={'fadeOut'}\r\n        scrollOffset={100}\r\n        swipeDirection={'down'}\r\n        onSwipeComplete={() => navigation.goBack()}\r\n      >\r\n        <PhoneCode\r\n          lang={lang}\r\n          navigation={navigation}\r\n        />\r\n      </RnModal>\r\n\r\n    </View >\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}