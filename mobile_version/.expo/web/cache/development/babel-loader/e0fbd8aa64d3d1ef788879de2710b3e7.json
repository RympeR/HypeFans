{"ast":null,"code":"var _jsxFileName = \"D:\\\\develop\\\\pypr\\\\HypeFans\\\\mobile_version\\\\screens\\\\main\\\\settings\\\\CardCheck.js\";\nimport React, { useState, useEffect } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\n\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nimport s from \"../../../styles/style\";\nimport text from \"../../../assets/text/text\";\nvar platform = Platform.OS === 'ios' ? true : false;\nimport SvgUri from \"expo-svg-uri\";\nimport CardEmpty from \"./CardEmpty\";\nimport CardPage from \"./CardPage\";\nexport default function Screen(props) {\n  var lang = props.lang;\n  var navigation = props.navigation;\n\n  var _useState = useState(false),\n      cardStatus = _useState.cardStatus,\n      setCardStatus = _useState.setCardStatus;\n\n  return React.createElement(View, {\n    style: [s.container],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, cardStatus ? React.createElement(CardPage, {\n    lang: lang,\n    navigation: navigation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }) : React.createElement(CardEmpty, {\n    lang: lang,\n    navigation: navigation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }));\n}","map":{"version":3,"sources":["D:/develop/pypr/HypeFans/mobile_version/screens/main/settings/CardCheck.js"],"names":["React","useState","useEffect","Dimensions","get","width","height","s","text","platform","Platform","OS","SvgUri","CardEmpty","CardPage","Screen","props","lang","navigation","cardStatus","setCardStatus","container"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;;;;;;;;;;;;sBAmB0BC,UAAU,CAACC,GAAX,CAAe,QAAf,C;IAAlBC,K,mBAAAA,K;IAAOC,M,mBAAAA,M;;AAEf,OAAOC,CAAP;AACA,OAAOC,IAAP;AAEA,IAAIC,QAAQ,GAAGC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,IAAxB,GAA+B,KAA9C;AAEA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAOC,SAAP;AACA,OAAOC,QAAP;AAGA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAEpC,MAAIC,IAAI,GAAGD,KAAK,CAACC,IAAjB;AACA,MAAIC,UAAU,GAAGF,KAAK,CAACE,UAAvB;;AAHoC,kBAKAjB,QAAQ,CAAC,KAAD,CALR;AAAA,MAK9BkB,UAL8B,aAK9BA,UAL8B;AAAA,MAKlBC,aALkB,aAKlBA,aALkB;;AAOpC,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACb,CAAC,CAACc,SAAH,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGIF,UAAU,GAER,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEF,IADR;AAEE,IAAA,UAAU,EAAEC,UAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFQ,GAOR,oBAAC,SAAD;AACE,IAAA,IAAI,EAAED,IADR;AAEE,IAAA,UAAU,EAAEC,UAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVN,CADF;AAmBD","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Animated,\r\n  Image,\r\n  ImageBackground,\r\n  Platform,\r\n  ScrollView,\r\n  StyleSheet,\r\n  Switch,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  TouchableWithoutFeedback,\r\n  KeyboardAvoidingView,\r\n  View,\r\n  Dimensions,\r\n  BackHandler\r\n} from 'react-native';\r\n\r\nconst { width, height } = Dimensions.get(\"screen\")\r\n\r\nimport s from '../../../styles/style'\r\nimport text from '../../../assets/text/text'\r\n\r\nlet platform = Platform.OS === 'ios' ? true : false\r\n\r\nimport SvgUri from \"expo-svg-uri\"\r\n\r\nimport CardEmpty from './CardEmpty'\r\nimport CardPage from './CardPage'\r\n\r\n\r\nexport default function Screen(props) {\r\n\r\n  let lang = props.lang\r\n  let navigation = props.navigation\r\n\r\n  let { cardStatus, setCardStatus } = useState(false)\r\n\r\n  return (\r\n    <View style={[s.container]}>\r\n\r\n      { // card connected?\r\n        cardStatus\r\n          ?\r\n          <CardPage\r\n            lang={lang}\r\n            navigation={navigation}\r\n          />\r\n          :\r\n          <CardEmpty\r\n            lang={lang}\r\n            navigation={navigation}\r\n          />\r\n      }\r\n\r\n    </View >\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}