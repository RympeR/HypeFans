{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\develop\\\\pypr\\\\HypeFans\\\\mobile_version\\\\screens\\\\main\\\\chat\\\\Index.js\";\nimport React, { useState, useEffect } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\n\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nimport s from \"../../../styles/style\";\nimport text from \"../../../assets/text/text\";\nimport Chat from \"./Chat\";\nimport ChatModule from \"./ChatModule\";\nimport CreateChat from \"./CreateChat\";\nimport ChatGroup from \"./ChatGroup\";\nimport Mailing from \"./Mailing\";\nimport MailingModule from \"./MailingModule\";\nimport PaidChat from \"./PaidChat\";\nimport UserPage from \"../profile/UserPage\";\nvar platform = Platform.OS === 'ios' ? true : false;\nimport SvgUri from \"expo-svg-uri\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer } from '@react-navigation/native';\nvar Stack = createStackNavigator();\nexport default function Screen(props) {\n  var _this = this;\n\n  var lang = props.lang;\n  var navigation = props.navigation;\n  var route = props.data && props.data.route || null;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      search = _React$useState2[0],\n      setSearch = _React$useState2[1];\n\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Navigator, {\n    initialRouteName: route || \"Chat\",\n    screenOptions: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, function (nprops) {\n    return React.createElement(Chat, _extends({}, nprops, {\n      lang: lang,\n      users: props.users,\n      setTab: function setTab(stat) {\n        return props.setTab(stat);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 24\n      }\n    }));\n  }), React.createElement(Stack.Screen, {\n    name: \"ChatModule\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, function (nprops) {\n    return React.createElement(ChatModule, _extends({}, nprops, {\n      lang: lang,\n      setTab: function setTab(stat) {\n        return props.setTab(stat);\n      },\n      data: props.data,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 24\n      }\n    }));\n  }), React.createElement(Stack.Screen, {\n    name: \"CreateChat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, function (nprops) {\n    return React.createElement(CreateChat, _extends({}, nprops, {\n      lang: lang,\n      users: props.users,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 24\n      }\n    }));\n  }), React.createElement(Stack.Screen, {\n    name: \"ChatGroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, function (nprops) {\n    return React.createElement(ChatGroup, _extends({}, nprops, {\n      lang: lang,\n      users: props.users,\n      setTab: function setTab(stat) {\n        return props.setTab(stat);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 24\n      }\n    }));\n  }), React.createElement(Stack.Screen, {\n    name: \"Mailing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, function (nprops) {\n    return React.createElement(Mailing, _extends({}, nprops, {\n      lang: lang,\n      users: props.users,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 24\n      }\n    }));\n  }), React.createElement(Stack.Screen, {\n    name: \"MailingModule\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, function (nprops) {\n    return React.createElement(MailingModule, _extends({}, nprops, {\n      lang: lang,\n      setTab: function setTab(stat) {\n        return props.setTab(stat);\n      },\n      users: props.users,\n      user: props.users[2],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 24\n      }\n    }));\n  }), React.createElement(Stack.Screen, {\n    name: \"PaidChat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, function (nprops) {\n    return React.createElement(PaidChat, _extends({}, nprops, {\n      lang: lang,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 24\n      }\n    }));\n  }), React.createElement(Stack.Screen, {\n    name: \"UserPage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, function (nprops) {\n    return React.createElement(UserPage, _extends({}, nprops, {\n      lang: lang,\n      users: props.users,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 24\n      }\n    }));\n  })));\n}","map":{"version":3,"sources":["D:/develop/pypr/HypeFans/mobile_version/screens/main/chat/Index.js"],"names":["React","useState","useEffect","Dimensions","get","width","height","s","text","Chat","ChatModule","CreateChat","ChatGroup","Mailing","MailingModule","PaidChat","UserPage","platform","Platform","OS","SvgUri","createStackNavigator","NavigationContainer","Stack","Screen","props","lang","navigation","route","data","search","setSearch","headerShown","nprops","users","stat","setTab"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Image,\r\n  ImageBackground,\r\n  Platform,\r\n  ScrollView,\r\n  StyleSheet,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  TouchableWithoutFeedback,\r\n  KeyboardAvoidingView,\r\n  View,\r\n  Dimensions,\r\n} from 'react-native';\r\n\r\nconst { width, height } = Dimensions.get(\"screen\")\r\n\r\nimport s from '../../../styles/style'\r\nimport text from '../../../assets/text/text'\r\n\r\nimport Chat from './Chat'\r\nimport ChatModule from './ChatModule'\r\nimport CreateChat from './CreateChat'\r\nimport ChatGroup from './ChatGroup'\r\nimport Mailing from './Mailing'\r\nimport MailingModule from './MailingModule'\r\nimport PaidChat from './PaidChat'\r\n\r\nimport UserPage from '../profile/UserPage'\r\n\r\nlet platform = Platform.OS === 'ios' ? true : false\r\n\r\nimport SvgUri from \"expo-svg-uri\"\r\n\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nexport default function Screen(props) {\r\n\r\n  let lang = props.lang\r\n  let navigation = props.navigation\r\n  let route = props.data && props.data.route || null\r\n\r\n  let [search, setSearch] = React.useState(false)\r\n\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator\r\n        initialRouteName = {route || \"Chat\"}\r\n        screenOptions={{\r\n          headerShown: false\r\n        }}\r\n      >\r\n        <Stack.Screen name=\"Chat\">\r\n          {(nprops) => <Chat  {...nprops}\r\n            lang={lang}\r\n            users={props.users}\r\n            setTab={(stat) => props.setTab(stat)}\r\n          />}\r\n        </Stack.Screen>\r\n        <Stack.Screen name=\"ChatModule\">\r\n          {(nprops) => <ChatModule  {...nprops}\r\n            lang={lang}\r\n            setTab={(stat) => props.setTab(stat)}\r\n            data={props.data}\r\n          />}\r\n        </Stack.Screen>\r\n        <Stack.Screen name=\"CreateChat\">\r\n          {(nprops) => <CreateChat  {...nprops}\r\n            lang={lang}\r\n            users={props.users}\r\n          />}\r\n        </Stack.Screen>\r\n        <Stack.Screen name=\"ChatGroup\">\r\n          {(nprops) => <ChatGroup  {...nprops}\r\n            lang={lang}\r\n            users={props.users}\r\n            setTab={(stat) => props.setTab(stat)}\r\n          />}\r\n        </Stack.Screen>\r\n\r\n        <Stack.Screen name=\"Mailing\">\r\n          {(nprops) => <Mailing  {...nprops}\r\n            lang={lang}\r\n            users={props.users}\r\n          />}\r\n        </Stack.Screen>\r\n        <Stack.Screen name=\"MailingModule\">\r\n          {(nprops) => <MailingModule  {...nprops}\r\n            lang={lang}\r\n            setTab={(stat) => props.setTab(stat)}\r\n            users={props.users}\r\n            user={props.users[2]}\r\n          />}\r\n        </Stack.Screen>\r\n\r\n        <Stack.Screen name=\"PaidChat\">\r\n          {(nprops) => <PaidChat  {...nprops}\r\n            lang={lang}\r\n          />}\r\n        </Stack.Screen>\r\n\r\n        <Stack.Screen name=\"UserPage\">\r\n          {(nprops) => <UserPage  {...nprops}\r\n            lang={lang}\r\n            users={props.users}\r\n          />}\r\n        </Stack.Screen>\r\n\r\n\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}