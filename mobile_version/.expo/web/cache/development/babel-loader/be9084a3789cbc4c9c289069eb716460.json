{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\develop\\\\pypr\\\\HypeFans\\\\mobile_version\\\\screens\\\\main\\\\settings\\\\ListUsers.js\";\nimport React, { useState, useEffect } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\n\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nimport s from \"../../../styles/style\";\nimport text from \"../../../assets/text/text\";\nvar platform = Platform.OS === 'ios' ? true : false;\nimport SvgUri from \"expo-svg-uri\";\nexport default function Screen(props) {\n  var _this = this;\n\n  var lang = props.lang;\n  var navigation = props.navigation;\n  var list = props.route.params.list;\n\n  var _React$useState = React.useState(list),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      userList = _React$useState2[0],\n      setUserList = _React$useState2[1];\n\n  var _filerList = function _filerList(txt) {\n    var word = txt.toLowerCase();\n    var filteredWord;\n\n    if (txt != '') {\n      filteredWord = list.filter(function (user, i) {\n        return user.name.toLowerCase().includes(word);\n      });\n    } else {\n      filteredWord = list;\n    }\n\n    setUserList(filteredWord);\n  };\n\n  return React.createElement(View, {\n    style: [s.container, s.backColor],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: [s.topBar, s.flexRow, s.spaceBtw, s.aCenter, s.statBarMargin],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: [s.btn50, s.center],\n    activeOpacity: 0.8,\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, React.createElement(SvgUri, {\n    width: \"16\",\n    height: \"16\",\n    source: require(\"../../../assets/images/back.svg\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  })), React.createElement(Text, {\n    style: [width < 320 ? s.text20 : s.text24, s.factorBold, s.textBlack],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, props.route.params.title), React.createElement(TouchableOpacity, {\n    style: [s.btn50, s.center],\n    activeOpacity: 0.8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: [s.pinkLine],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: [],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: [s.topBar, s.flexRow, s.spaceBtw, s.aCenter],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: [s.btn50, s.center],\n    activeOpacity: 0.8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, React.createElement(SvgUri, {\n    width: \"24\",\n    height: \"24\",\n    source: require(\"../../../assets/images/search.svg\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  })), React.createElement(TextInput, {\n    style: [s.text14, s.factor, s.textBlack, s.flex1, s.h46, platform ? s.mt3 : null],\n    placeholder: text[lang].search,\n    placeholderTextColor: '#aaa',\n    onChangeText: function onChangeText(txt) {\n      return _filerList(txt);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: [s.greyLine, s.mh15],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  })), React.createElement(ScrollView, {\n    style: [],\n    showsVerticalScrollIndicator: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, userList.map(function (user, index) {\n    return React.createElement(View, {\n      key: index,\n      style: [s.h53, s.aCenter, s.flexRow, s.spaceBtw, s.ml15, s.mt15],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: [s.aCenter, s.flexRow, {\n        width: width - 100\n      }],\n      activeOpacity: 0.8,\n      onPress: function onPress() {\n        return navigation.navigate('UserPage', {\n          user: user\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    }, React.createElement(Image, {\n      style: [s.image50r, s.mr10],\n      source: user.ava,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }), React.createElement(View, {\n      style: [],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      numberOfLines: 1,\n      style: [s.text14, s.factorBold, s.textBlack],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 19\n      }\n    }, user.name), React.createElement(Text, {\n      numberOfLines: 1,\n      style: [s.text14, s.factor, s.textGrey, s.mt5],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 19\n      }\n    }, user.nick))), React.createElement(View, {\n      style: [s.flex1],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }\n    }));\n  })));\n}","map":{"version":3,"sources":["D:/develop/pypr/HypeFans/mobile_version/screens/main/settings/ListUsers.js"],"names":["React","useState","useEffect","Dimensions","get","width","height","s","text","platform","Platform","OS","SvgUri","Screen","props","lang","navigation","list","route","params","userList","setUserList","_filerList","txt","word","toLowerCase","filteredWord","filter","user","i","name","includes","container","backColor","topBar","flexRow","spaceBtw","aCenter","statBarMargin","btn50","center","goBack","require","text20","text24","factorBold","textBlack","title","pinkLine","text14","factor","flex1","h46","mt3","search","greyLine","mh15","map","index","h53","ml15","mt15","navigate","image50r","mr10","ava","textGrey","mt5","nick"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Animated,\r\n  Image,\r\n  ImageBackground,\r\n  Platform,\r\n  ScrollView,\r\n  StyleSheet,\r\n  Switch,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  TouchableWithoutFeedback,\r\n  KeyboardAvoidingView,\r\n  View,\r\n  Dimensions,\r\n  BackHandler\r\n} from 'react-native';\r\n\r\nconst { width, height } = Dimensions.get(\"screen\")\r\n\r\nimport s from '../../../styles/style'\r\nimport text from '../../../assets/text/text'\r\n\r\nlet platform = Platform.OS === 'ios' ? true : false\r\n\r\nimport SvgUri from \"expo-svg-uri\"\r\n\r\n\r\nexport default function Screen(props) {\r\n\r\n  let lang = props.lang\r\n  let navigation = props.navigation\r\n\r\n  let list = props.route.params.list\r\n\r\n  let [userList, setUserList] = React.useState(list)\r\n\r\n  let _filerList = (txt) => {\r\n    let word = txt.toLowerCase()\r\n    let filteredWord\r\n    if(txt!=''){\r\n      filteredWord = list.filter((user,i) => user.name.toLowerCase().includes(word))\r\n    }else{\r\n      filteredWord = list\r\n    }\r\n    setUserList(filteredWord)\r\n  } \r\n  return (\r\n    <View style={[s.container, s.backColor]}>\r\n\r\n      <View style={[s.topBar, s.flexRow, s.spaceBtw, s.aCenter, s.statBarMargin]}>\r\n        <TouchableOpacity style={[s.btn50, s.center]}\r\n          activeOpacity={0.8}\r\n          onPress={() => navigation.goBack()}\r\n        >\r\n          <SvgUri width=\"16\" height=\"16\"\r\n            source={require('../../../assets/images/back.svg')} />\r\n        </TouchableOpacity>\r\n        <Text style={[width < 320 ? s.text20 : s.text24, s.factorBold, s.textBlack]}>{props.route.params.title}</Text>\r\n\r\n        <TouchableOpacity style={[s.btn50, s.center]}\r\n          activeOpacity={0.8}\r\n        //onPress={() => navigation.navigate('NoteSettings')}\r\n        >\r\n          {/* <SvgUri width=\"30\" height=\"30\"\r\n            source={require('../../../assets/images/settings.svg')} /> */}\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      <View style={[s.pinkLine]} />\r\n\r\n      <View style={[]}>\r\n        <View style={[s.topBar, s.flexRow, s.spaceBtw, s.aCenter]}>\r\n          <TouchableOpacity style={[s.btn50, s.center]}\r\n            activeOpacity={0.8}\r\n          //onPress={() => setSearch(false)}\r\n          >\r\n            <SvgUri width=\"24\" height=\"24\"\r\n              source={require('../../../assets/images/search.svg')} />\r\n          </TouchableOpacity>\r\n\r\n          <TextInput\r\n            style={[s.text14, s.factor, s.textBlack, s.flex1, s.h46, platform ? s.mt3 : null]}\r\n            placeholder={text[lang].search}\r\n            placeholderTextColor={'#aaa'}\r\n          // onFocus={() => platform ? null : props.setTab(false)}\r\n          // onBlur={() => platform ? null : props.setTab(true)}\r\n          //onEndEditing={() => { setSearch(false) }}\r\n          onChangeText={(txt)=>_filerList(txt)}\r\n          />\r\n\r\n        </View>\r\n        <View style={[s.greyLine, s.mh15]}/>\r\n      </View>\r\n\r\n      <ScrollView style={[]} showsVerticalScrollIndicator={false}>\r\n\r\n        {\r\n          userList.map((user, index) => (\r\n            <View key={index} style={[s.h53, s.aCenter, s.flexRow, s.spaceBtw, s.ml15, s.mt15]}>\r\n              <TouchableOpacity style={[s.aCenter, s.flexRow, { width: width - 100 }]}\r\n                activeOpacity={0.8}\r\n                onPress={() => navigation.navigate('UserPage', { user: user })}\r\n              >\r\n                <Image\r\n                  style={[s.image50r, s.mr10]}\r\n                  source={user.ava}\r\n                />\r\n                <View style={[]}>\r\n                  <Text numberOfLines={1} style={[s.text14, s.factorBold, s.textBlack]}>{user.name}</Text>\r\n                  <Text numberOfLines={1} style={[s.text14, s.factor, s.textGrey, s.mt5]}>{user.nick}</Text>\r\n                </View>\r\n              </TouchableOpacity>\r\n\r\n\r\n              <View style={[s.flex1]} />\r\n            </View>\r\n          ))\r\n        }\r\n\r\n      </ScrollView>\r\n    </View >\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}