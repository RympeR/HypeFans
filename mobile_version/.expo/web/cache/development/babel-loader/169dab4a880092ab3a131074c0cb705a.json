{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\develop\\\\pypr\\\\HypeFans\\\\mobile_version\\\\screens\\\\main\\\\notifications\\\\Notifications.js\";\nimport React, { useState, useEffect } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\n\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nimport s from \"../../../styles/style\";\nimport text from \"../../../assets/text/text\";\nimport TopGradient from \"../../../components/TopGradient\";\nvar platform = Platform.OS === 'ios' ? true : false;\nimport SvgUri from \"expo-svg-uri\";\nexport default function Screen(props) {\n  var _this = this;\n\n  var lang = props.lang;\n  var navigation = props.navigation;\n  var users = props.users;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      buttons = _React$useState2[0],\n      setButtons = _React$useState2[1];\n\n  var _React$useState3 = React.useState('all'),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      filter = _React$useState4[0],\n      setFilter = _React$useState4[1];\n\n  var notes = [{\n    user: users[0],\n    type: 'likes',\n    msg: '',\n    time: '2 часа назад',\n    term: '',\n    sum: '',\n    img: require(\"../../../assets/images/thumb1.png\")\n  }, {\n    user: users[1],\n    type: 'comments',\n    msg: 'вау, очень красиво!',\n    time: '5 часов назад',\n    term: '',\n    sum: '',\n    img: require(\"../../../assets/images/thumb2.png\")\n  }, {\n    user: users[2],\n    type: 'subscribs',\n    msg: '',\n    time: '2 часа назад',\n    term: '3 месяца',\n    sum: '',\n    img: require(\"../../../assets/images/thumb2.png\")\n  }, {\n    user: users[4],\n    type: 'likes',\n    msg: '',\n    time: '2 часа назад',\n    term: '',\n    sum: '',\n    img: require(\"../../../assets/images/thumb1.png\")\n  }, {\n    user: users[5],\n    type: 'comments',\n    msg: 'вау, очень красиво!',\n    time: '5 часов назад',\n    term: '',\n    sum: '',\n    img: require(\"../../../assets/images/thumb2.png\")\n  }, {\n    user: users[6],\n    type: 'subscribs',\n    msg: '',\n    time: '2 часа назад',\n    term: '3 месяца',\n    sum: '',\n    img: require(\"../../../assets/images/thumb2.png\")\n  }];\n\n  var _React$useState5 = React.useState(notes),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      activeNotes = _React$useState6[0],\n      setActiveNotes = _React$useState6[1];\n\n  var _sort = function _sort(type) {\n    var arr = notes.filter(function (note) {\n      return note.type == type;\n    });\n    setActiveNotes(arr);\n  };\n\n  return React.createElement(View, {\n    style: [s.container, s.backColor],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: [s.topBar, s.flexRow, s.spaceBtw, s.aCenter, s.statBarMargin],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: [s.btn50, s.center],\n    activeOpacity: 0.8,\n    onPress: function onPress() {\n      return props.onBack();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, React.createElement(SvgUri, {\n    width: \"16\",\n    height: \"16\",\n    source: require(\"../../../assets/images/back.svg\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  })), React.createElement(Text, {\n    style: [s.text24, s.factorBold, s.textBlack],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, text[lang].notif), React.createElement(TouchableOpacity, {\n    style: [s.btn50, s.center],\n    activeOpacity: 0.6,\n    onPress: function onPress() {\n      return navigation.navigate('NoteSettings');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, React.createElement(SvgUri, {\n    width: \"20\",\n    height: \"20\",\n    source: require(\"../../../assets/images/settings.svg\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }))), React.createElement(View, {\n    style: [s.flexRow, s.mh15, s.mt10],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, buttons ? React.createElement(View, {\n    style: [s.buttonsDrawer, s.flexRow],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: [filter == 'all' ? s.orangeRoundBtn : s.drawerBtn, s.center],\n    activeOpacity: 0.8,\n    onPress: function onPress() {\n      setButtons(!buttons);\n      setFilter('all');\n      setActiveNotes(notes);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, React.createElement(SvgUri, {\n    width: \"30\",\n    height: \"30\",\n    source: filter == 'all' ? require(\"../../../assets/images/bellW.svg\") : require(\"../../../assets/images/bellN.svg\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: [filter == 'comments' ? s.orangeRoundBtn : s.drawerBtn, s.center],\n    activeOpacity: 0.8,\n    onPress: function onPress() {\n      setFilter('comments');\n\n      _sort('comments');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, React.createElement(SvgUri, {\n    width: \"30\",\n    height: \"30\",\n    source: filter == 'comments' ? require(\"../../../assets/images/message-circleW.svg\") : require(\"../../../assets/images/message-circle.svg\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: [filter == 'likes' ? s.orangeRoundBtn : s.drawerBtn, s.center],\n    activeOpacity: 0.8,\n    onPress: function onPress() {\n      setFilter('likes');\n\n      _sort('likes');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }, React.createElement(SvgUri, {\n    width: \"30\",\n    height: \"30\",\n    source: filter == 'likes' ? require(\"../../../assets/images/heartW.svg\") : require(\"../../../assets/images/heartB.svg\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: [filter == 'subscribs' ? s.orangeRoundBtn : s.drawerBtn, s.center],\n    activeOpacity: 0.8,\n    onPress: function onPress() {\n      setFilter('subscribs');\n\n      _sort('subscribs');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, React.createElement(SvgUri, {\n    width: \"30\",\n    height: \"30\",\n    source: filter == 'subscribs' ? require(\"../../../assets/images/unlockW.svg\") : require(\"../../../assets/images/unlock.svg\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: [filter == 'donuts' ? s.orangeRoundBtn : s.drawerBtn, s.center],\n    activeOpacity: 0.8,\n    onPress: function onPress() {\n      setFilter('donuts');\n\n      _sort('donuts');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }, React.createElement(SvgUri, {\n    width: \"30\",\n    height: \"30\",\n    source: filter == 'donuts' ? require(\"../../../assets/images/tipW.svg\") : require(\"../../../assets/images/tip.svg\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }))) : React.createElement(TouchableOpacity, {\n    style: [filter == 'all' ? s.orangeRoundBtn : null, s.center],\n    activeOpacity: 0.8,\n    onPress: function onPress() {\n      return setButtons(!buttons);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, React.createElement(SvgUri, {\n    width: \"30\",\n    height: \"30\",\n    source: filter == 'all' ? require(\"../../../assets/images/bellW.svg\") : require(\"../../../assets/images/bellW.svg\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 15\n    }\n  }))), React.createElement(Text, {\n    style: [s.text18, s.factor, s.textGrey2, s.mh15, s.mt20],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  }, (filter == 'all' ? text[lang].all : '') + (filter == 'comments' ? text[lang].comments : '') + (filter == 'likes' ? text[lang].likes : '') + (filter == 'subscribs' ? text[lang].subscribs : '') + (filter == 'donuts' ? text[lang].donuts : '')), React.createElement(TopGradient, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }\n  }), React.createElement(ScrollView, {\n    style: [],\n    showsVerticalScrollIndicator: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }\n  }, activeNotes.length == 0 ? React.createElement(Text, {\n    style: [s.text18, s.textBlack, s.mh20, s.mt15],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, text[lang].noComments) : activeNotes.map(function (note, index) {\n    return React.createElement(TouchableOpacity, {\n      key: index,\n      style: [s.noteBar, s.greyBottom, s.flexRow, s.spaceBtw, s.mh15, s.mt15],\n      activeOpacity: 1,\n      onPress: function onPress() {\n        return navigation.navigate('UserPage', {\n          user: note.user\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 15\n      }\n    }, React.createElement(View, {\n      style: [s.flexRow],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: [s.noteUser, s.flexRow, s.Center],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 19\n      }\n    }, React.createElement(Image, {\n      style: [s.image60r, s.mr10],\n      source: note.user.ava,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 21\n      }\n    }), React.createElement(View, {\n      style: [{\n        width: width - 175\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      numberOfLines: 1,\n      style: [s.text18, s.factorBold, s.textBlack],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 23\n      }\n    }, note.user.name), React.createElement(Text, {\n      numberOfLines: 1,\n      style: [s.text18, s.factor, s.textGrey2, s.mt3],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 23\n      }\n    }, note.user.nick), note.type == 'likes' ? React.createElement(Text, {\n      style: [s.text14, s.factor, s.textBlack, s.mt8],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 27\n      }\n    }, text[lang].noteLike) : null, note.type == 'comments' ? React.createElement(Text, {\n      style: [s.text14, s.factor, s.textBlack, s.mt8],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 27\n      }\n    }, text[lang].noteComment, React.createElement(Text, {\n      style: [s.text14, s.factor, s.textBlack, s.mt8],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 29\n      }\n    }, note.msg)) : null, note.type == 'subscribs' ? React.createElement(Text, {\n      style: [s.text14, s.factor, s.textBlack, s.mt8],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 27\n      }\n    }, text[lang].noteSubscribe) : null, note.type == 'donuts' ? React.createElement(Text, {\n      style: [s.text14, s.factor, s.textBlack, s.mt8],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 27\n      }\n    }, text[lang].noteDonut, React.createElement(Text, {\n      style: [s.text14, s.factor, s.textBlack, s.mt8],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 29\n      }\n    }, note.sum)) : null, React.createElement(Text, {\n      style: [s.text14, s.factor, s.textGrey2, s.mt8, s.mb15],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 23\n      }\n    }, note.time)))), note.type == 'subscribs' ? React.createElement(View, {\n      style: [s.termView, s.center],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: [s.text12, s.factor, s.mh10],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 23\n      }\n    }, note.term)) : React.createElement(View, {\n      style: [s.noteImg, s.mh5],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 21\n      }\n    }, React.createElement(Image, {\n      style: [s.noteImg],\n      source: note.img,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 23\n      }\n    })));\n  }), React.createElement(View, {\n    style: {\n      height: 60\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["D:/develop/pypr/HypeFans/mobile_version/screens/main/notifications/Notifications.js"],"names":["React","useState","useEffect","Dimensions","get","width","height","s","text","TopGradient","platform","Platform","OS","SvgUri","Screen","props","lang","navigation","users","buttons","setButtons","filter","setFilter","notes","user","type","msg","time","term","sum","img","require","activeNotes","setActiveNotes","_sort","arr","note","container","backColor","topBar","flexRow","spaceBtw","aCenter","statBarMargin","btn50","center","onBack","text24","factorBold","textBlack","notif","navigate","mh15","mt10","buttonsDrawer","orangeRoundBtn","drawerBtn","text18","factor","textGrey2","mt20","all","comments","likes","subscribs","donuts","length","mh20","mt15","noComments","map","index","noteBar","greyBottom","noteUser","Center","image60r","mr10","ava","name","mt3","nick","text14","mt8","noteLike","noteComment","noteSubscribe","noteDonut","mb15","termView","text12","mh10","noteImg","mh5"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Animated,\r\n  Image,\r\n  ImageBackground,\r\n  Platform,\r\n  ScrollView,\r\n  StyleSheet,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  TouchableWithoutFeedback,\r\n  KeyboardAvoidingView,\r\n  View,\r\n  Dimensions,\r\n} from 'react-native';\r\n\r\nconst { width, height } = Dimensions.get(\"screen\")\r\n\r\nimport s from '../../../styles/style'\r\nimport text from '../../../assets/text/text'\r\n\r\nimport TopGradient from '../../../components/TopGradient'\r\n\r\nlet platform = Platform.OS === 'ios' ? true : false\r\n\r\nimport SvgUri from \"expo-svg-uri\"\r\n\r\n\r\nexport default function Screen(props) {\r\n\r\n  let lang = props.lang\r\n  let navigation = props.navigation\r\n  let users = props.users\r\n\r\n  let [buttons, setButtons] = React.useState(false)\r\n  let [filter, setFilter] = React.useState('all') // comments likes subscribs donuts\r\n\r\n  let notes = [\r\n    { user: users[0], type: 'likes', msg: '', time: '2 часа назад', term: '', sum: '', img: require('../../../assets/images/thumb1.png') },\r\n    { user: users[1], type: 'comments', msg: 'вау, очень красиво!', time: '5 часов назад', term: '', sum: '', img: require('../../../assets/images/thumb2.png') },\r\n    { user: users[2], type: 'subscribs', msg: '', time: '2 часа назад', term: '3 месяца', sum: '', img: require('../../../assets/images/thumb2.png') },\r\n    //{ user: users[3], type: 'donuts', msg: '', time: '5 часов назад', term: '', sum: '$11', img: require('../../../assets/images/thumb2.png') },\r\n    { user: users[4], type: 'likes', msg: '', time: '2 часа назад', term: '', sum: '', img: require('../../../assets/images/thumb1.png') },\r\n    { user: users[5], type: 'comments', msg: 'вау, очень красиво!', time: '5 часов назад', term: '', sum: '', img: require('../../../assets/images/thumb2.png') },\r\n    { user: users[6], type: 'subscribs', msg: '', time: '2 часа назад', term: '3 месяца', sum: '', img: require('../../../assets/images/thumb2.png') },\r\n  ]\r\n  let [activeNotes, setActiveNotes] = React.useState(notes)\r\n\r\n  let _sort = (type) => {\r\n    let arr = notes.filter(note => note.type == type)\r\n    setActiveNotes(arr)\r\n  }\r\n\r\n\r\n  return (\r\n    <View style={[s.container, s.backColor]}>\r\n\r\n      <View style={[s.topBar, s.flexRow, s.spaceBtw, s.aCenter, s.statBarMargin]}>\r\n        <TouchableOpacity style={[s.btn50, s.center]}\r\n          activeOpacity={0.8}\r\n          onPress={() => props.onBack()}\r\n        >\r\n          <SvgUri width=\"16\" height=\"16\"\r\n            source={require('../../../assets/images/back.svg')} />\r\n        </TouchableOpacity>\r\n        <Text style={[s.text24, s.factorBold, s.textBlack]}>{text[lang].notif}</Text>\r\n\r\n        <TouchableOpacity style={[s.btn50, s.center]}\r\n          activeOpacity={0.6}\r\n          onPress={() => navigation.navigate('NoteSettings')}\r\n        >\r\n          <SvgUri width=\"20\" height=\"20\"\r\n            source={require('../../../assets/images/settings.svg')} />\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      <View style={[s.flexRow, s.mh15, s.mt10]}>\r\n        {\r\n          buttons\r\n            ?\r\n            <View style={[s.buttonsDrawer, s.flexRow]}>\r\n              <TouchableOpacity style={[filter == 'all' ? s.orangeRoundBtn : s.drawerBtn, s.center]}\r\n                activeOpacity={0.8}\r\n                onPress={() => {\r\n                  setButtons(!buttons)\r\n                  setFilter('all')\r\n                  setActiveNotes(notes)\r\n                }}\r\n              >\r\n                <SvgUri width=\"30\" height=\"30\"\r\n                  source={filter == 'all'\r\n                    ? require('../../../assets/images/bellW.svg')\r\n                    : require('../../../assets/images/bellN.svg')}\r\n                />\r\n              </TouchableOpacity>\r\n              <TouchableOpacity style={[filter == 'comments' ? s.orangeRoundBtn : s.drawerBtn, s.center]}\r\n                activeOpacity={0.8}\r\n                onPress={() => {\r\n                  setFilter('comments')\r\n                  _sort('comments')\r\n                }}\r\n              >\r\n                <SvgUri width=\"30\" height=\"30\"\r\n                  source={filter == 'comments'\r\n                    ? require('../../../assets/images/message-circleW.svg')\r\n                    : require('../../../assets/images/message-circle.svg')\r\n                  } />\r\n              </TouchableOpacity>\r\n              <TouchableOpacity style={[filter == 'likes' ? s.orangeRoundBtn : s.drawerBtn, s.center]}\r\n                activeOpacity={0.8}\r\n                onPress={() => {\r\n                  setFilter('likes')\r\n                  _sort('likes')\r\n                }}\r\n              >\r\n                <SvgUri width=\"30\" height=\"30\"\r\n                  source={filter == 'likes'\r\n                    ? require('../../../assets/images/heartW.svg')\r\n                    : require('../../../assets/images/heartB.svg')\r\n                  } />\r\n              </TouchableOpacity>\r\n              <TouchableOpacity style={[filter == 'subscribs' ? s.orangeRoundBtn : s.drawerBtn, s.center]}\r\n                activeOpacity={0.8}\r\n                onPress={() => {\r\n                  setFilter('subscribs')\r\n                  _sort('subscribs')\r\n                }}\r\n              >\r\n                <SvgUri width=\"30\" height=\"30\"\r\n                  source={filter == 'subscribs'\r\n                    ? require('../../../assets/images/unlockW.svg')\r\n                    : require('../../../assets/images/unlock.svg')\r\n                  } />\r\n              </TouchableOpacity>\r\n              <TouchableOpacity style={[filter == 'donuts' ? s.orangeRoundBtn : s.drawerBtn, s.center]}\r\n                activeOpacity={0.8}\r\n                onPress={() => {\r\n                  setFilter('donuts')\r\n                  _sort('donuts')\r\n                }}\r\n              >\r\n                <SvgUri width=\"30\" height=\"30\"\r\n                  source={filter == 'donuts'\r\n                    ? require('../../../assets/images/tipW.svg')\r\n                    : require('../../../assets/images/tip.svg')\r\n                  } />\r\n              </TouchableOpacity>\r\n            </View>\r\n            :\r\n            <TouchableOpacity style={[filter == 'all' ? s.orangeRoundBtn : null, s.center]}\r\n              activeOpacity={0.8}\r\n              onPress={() => setButtons(!buttons)}\r\n            >\r\n              <SvgUri width=\"30\" height=\"30\"\r\n                source={filter == 'all'\r\n                  ? require('../../../assets/images/bellW.svg')\r\n                  : require('../../../assets/images/bellW.svg')\r\n                } />\r\n            </TouchableOpacity>\r\n        }\r\n      </View>\r\n\r\n      {/* filter = all comments likes subscribs donuts */}\r\n      <Text style={[s.text18, s.factor, s.textGrey2, s.mh15, s.mt20]}>\r\n        {\r\n          (filter == 'all' ? text[lang].all : '') +\r\n          (filter == 'comments' ? text[lang].comments : '') +\r\n          (filter == 'likes' ? text[lang].likes : '') +\r\n          (filter == 'subscribs' ? text[lang].subscribs : '') +\r\n          (filter == 'donuts' ? text[lang].donuts : '')\r\n        }\r\n      </Text>\r\n\r\n\r\n\r\n      <TopGradient />\r\n\r\n\r\n      <ScrollView style={[]} showsVerticalScrollIndicator={false}>\r\n\r\n\r\n        {activeNotes.length == 0\r\n          ? <Text style={[s.text18, s.textBlack, s.mh20, s.mt15]}>{text[lang].noComments}</Text>\r\n          : activeNotes.map((note, index) => {\r\n            return (\r\n              <TouchableOpacity key={index} style={[s.noteBar, s.greyBottom, s.flexRow, s.spaceBtw, s.mh15, s.mt15]}\r\n                activeOpacity={1}\r\n                onPress={() => navigation.navigate('UserPage', {user: note.user}) }\r\n              >\r\n                <View style={[s.flexRow]}>\r\n                  <View style={[s.noteUser, s.flexRow, s.Center]}>\r\n                    <Image\r\n                      style={[s.image60r, s.mr10]}\r\n                      source={note.user.ava}\r\n                    />\r\n                    <View style={[{ width: width - 175 }]}>\r\n                      <Text numberOfLines={1} style={[s.text18, s.factorBold, s.textBlack]}>{note.user.name}</Text>\r\n                      <Text numberOfLines={1} style={[s.text18, s.factor, s.textGrey2, s.mt3]}>{note.user.nick}</Text>\r\n                      {\r\n                        note.type == 'likes'\r\n                          ?\r\n                          <Text style={[s.text14, s.factor, s.textBlack, s.mt8]}>{text[lang].noteLike}</Text>\r\n                          : null\r\n                      }\r\n                      {\r\n                        note.type == 'comments'\r\n                          ?\r\n                          <Text style={[s.text14, s.factor, s.textBlack, s.mt8]}>{text[lang].noteComment}\r\n                            <Text style={[s.text14, s.factor, s.textBlack, s.mt8]}>{note.msg}</Text>\r\n                          </Text>\r\n                          : null\r\n                      }\r\n                      {\r\n                        note.type == 'subscribs'\r\n                          ?\r\n                          <Text style={[s.text14, s.factor, s.textBlack, s.mt8]}>{text[lang].noteSubscribe}</Text>\r\n                          : null\r\n                      }\r\n                      {\r\n                        note.type == 'donuts'\r\n                          ?\r\n                          <Text style={[s.text14, s.factor, s.textBlack, s.mt8]}>{text[lang].noteDonut}\r\n                            <Text style={[s.text14, s.factor, s.textBlack, s.mt8]}>{note.sum}</Text>\r\n                          </Text>\r\n                          : null\r\n                      }\r\n                      <Text style={[s.text14, s.factor, s.textGrey2, s.mt8, s.mb15]}>{note.time}</Text>\r\n                    </View>\r\n                  </View>\r\n                </View>\r\n                {\r\n                  note.type == 'subscribs'\r\n                    ?\r\n                    <View style={[s.termView, s.center]}>\r\n                      <Text style={[s.text12, s.factor, s.mh10]}>{note.term}</Text>\r\n                    </View>\r\n                    :\r\n                    <View style={[s.noteImg, s.mh5]}>\r\n                      <Image\r\n                        style={[s.noteImg]}\r\n                        source={note.img}\r\n                      />\r\n                    </View>\r\n                }\r\n\r\n              </TouchableOpacity>\r\n\r\n            )\r\n          })\r\n\r\n        }\r\n\r\n\r\n        <View style={{ height: 60 }} />\r\n      </ScrollView>\r\n\r\n\r\n    </View >\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}